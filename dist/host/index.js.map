{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/realms-shim/dist/realms-shim.umd.js","webpack:///./node_modules/vm-browserify/index.js","webpack:///./node_modules/@mantou/gem/lib/utils.js","webpack:///./node_modules/@mantou/gem/lib/store.js","webpack:///./node_modules/@mantou/gem/lib/history.js","webpack:///./node_modules/lit-html/lib/directive.js","webpack:///./node_modules/lit-html/lib/dom.js","webpack:///./node_modules/lit-html/lib/part.js","webpack:///./node_modules/lit-html/lib/template.js","webpack:///./node_modules/lit-html/lib/template-instance.js","webpack:///./node_modules/lit-html/lib/template-result.js","webpack:///./node_modules/lit-html/lib/parts.js","webpack:///./node_modules/lit-html/lib/default-template-processor.js","webpack:///./node_modules/lit-html/lib/template-factory.js","webpack:///./node_modules/lit-html/lib/render.js","webpack:///./node_modules/lit-html/lit-html.js","webpack:///./node_modules/lit-html/directives/repeat.js","webpack:///./node_modules/lit-html/directives/guard.js","webpack:///./node_modules/lit-html/directives/if-defined.js","webpack:///./node_modules/@mantou/gem/lib/element.js","webpack:///./node_modules/@mantou/gem/lib/decorators.js","webpack:///./node_modules/@mantou/gem/index.js","webpack:///./node_modules/@mantou/gem/elements/route.js","webpack:///./src/host/app-header.ts","webpack:///./node_modules/@mantou/gem/elements/title.js","webpack:///./node_modules/gem-frame/src/proxy.ts","webpack:///./node_modules/gem-frame/src/index.ts","webpack:///./src/host/routes.ts","webpack:///./node_modules/@mantou/gem/elements/link.js","webpack:///./src/host/app-sidebar.ts","webpack:///./src/host/index.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;AClFA;AACA,EAAE,KAA4D;AAC9D,EAAE,SACmD;AACrD,CAAC,oBAAoB;;AAErB;AACA;AACA;AACA;;AAEA;AACA,sDAAsD,EAAE;;AAExD;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA,uBAAuB,UAAU;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,SAAS;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B,wBAAwB,YAAY;AACpC,sBAAsB,sBAAsB;AAC5C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,8BAA8B;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uCAAuC;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,cAAc;AACtD;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,IAAI,gBAAgB;AACtC;;AAEA;AACA,WAAW,aAAa;;AAExB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,KAAK;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,IAAI;AACpB;;AAEA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,mDAAmD;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uCAAuC,QAAQ,cAAc,EAAE;;AAE/D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB,OAAO;;AAEP;AACA;AACA;AACA,oBAAoB;AACpB,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,6CAA6C;AAC7C,uDAAuD;AACvD,wDAAwD;AACxD,kEAAkE;AAClE;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wCAAwC;AACxC,uDAAuD;;AAEvD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,qBAAqB,SAAS,aAAa;AACvD;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,mBAAO,CAAC,CAAI;;AAE3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,kBAAkB,IAAI,gBAAgB,IAAI;AAC1C;AACA;AACA,kBAAkB,IAAI,gBAAgB,IAAI;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA,4DAA4D,KAAK;AACjE;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,aAAa;AAC5E;;AAEA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA,2DAA2D,QAAQ;AACnE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA,gEAAgE,QAAQ;AACxE;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE,2BAA2B,QAAQ;AACxD;;AAEA;AACA,WAAW,iBAAiB;;AAE5B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;;AAE5B;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,cAAc;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,cAAc;AACtE;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uCAAuC;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;;AAE1C;AACA,8BAA8B,uBAAuB;AACrD,8BAA8B,uBAAuB;AACrD;AACA;AACA;AACA;AACA;AACA,wCAAwC,EAAE,EAAE;AAC5C;AACA;AACA;AACA,0BAA0B,EAAE,EAAE;AAC9B,gBAAgB;AAChB,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,eAAe,EAAE,IAAI,aAAa,GAAG;;AAEpE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,kCAAkC;;AAEpD;AACA;AACA;AACA;AACA,qDAAqD,cAAc;AACnE;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,kCAAkC;;AAE7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,2DAA2D;AACtE;;AAEA;AACA;;AAEA,WAAW,eAAe;AAC1B;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,+BAA+B;AAC1C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;;AAEA,WAAW,4BAA4B;AACvC;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB;AACA;;AAEA,iDAAiD,cAAc;AAC/D,uDAAuD;AACvD;AACA;AACA,WAAW,+BAA+B;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;AACD;;;;;;;ACn9CA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,SAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;ACpJA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AACxC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,IAAI,GAAG,eAAe;AACxF;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,EAAE,8BAA8B,KAAK;AACvD;AACA;AACA,KAAK,GAAG;AACR;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACG;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACO;AACP;AACA;AACA,+BAA+B,aAAa;AAC5C;AACA;AACO;AACP;AACA;AACA,iC;;ACrLuC;AACvC;AACO;AACA;AACP;AACA;AACA,+CAA+C,sDAAsD;AACrG;AACA;AACO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACO;AACP;AACA;AACA;AACA,QAAQ,YAAY;AACpB,KAAK;AACL;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA,iC;;AChCmD;AACU;AACtD,MAAM,eAAO;AACpB,MAAM,gBAAQ;AACd,kBAAkB,eAAO,gBAAgB,eAAO;AAChD,qBAAqB,eAAO,mBAAmB,eAAO;AACtD,IAAI,WAAG;AACP,uBAAuB,WAAG;AAC1B,MAAM,aAAK,GAAG,WAAW;AACzB;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA,kBAAkB,QAAQ;AAC1B;AACA,kBAAkB,QAAQ;AAC1B;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA,QAAQ,eAAO;AACf,eAAe,eAAO;AACtB;AACA;AACA;AACA;AACA,2CAA2C,eAAO,UAAU;AAC5D;AACA;AACA,kCAAkC,aAAK;AACvC;AACA,gDAAgD,gBAAQ;AACxD;AACA,sBAAsB,WAAW,qCAAqC,gBAAQ;AAC9E;AACA;AACA;AACA,uEAAuE,gBAAQ;AAC/E,yCAAyC,YAAY,2BAA2B;AAChF;AACA,wCAAwC,YAAY;AACpD;AACA,QAAQ,eAAO,UAAU,0BAA0B,gBAAQ,QAAQ;AACnE;AACA,CAAC;AACD;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,iCAAiC,8HAA8H,oBAAoB;AACnL;AACA,IAAI,WAAW,CAAC,WAAW,CAAC,aAAK;AACjC,4CAA4C,WAAW;AACvD,wCAAwC,gBAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB,aAAa;AAC/D,WAAW,yBAAyB,sBAAsB,gBAAQ;AAClE,+BAA+B,4BAA4B,WAAW,6BAA6B;AACnG;AACA,IAAI,WAAW,CAAC,WAAW,CAAC,aAAK;AACjC;AACA,wCAAwC,gBAAQ;AAChD;AACA;AACA;AACA;AACO,sBAAsB,WAAW;AACxC;AACA,CAAC;AACD,oBAAoB,eAAO;AAC3B;AACA;AACA,4BAA4B,eAAO;AACnC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,oBAAoB,WAAW,iBAAiB,cAAc;AAC9D;AACA,gDAAgD,aAAK,SAAS,uBAAuB,gBAAQ,YAAY;AACzG;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,qCAAqC,aAAK;AAC1C,aAAa;AACb,SAAS;AACT;AACA;AACA,4CAA4C,aAAK;AACjD,gBAAgB,WAAW,CAAC,aAAK,IAAI;AACrC,aAAa;AACb,SAAS;AACT;AACA,mBAAmB,aAAK;AACxB,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,oBAAoB,aAAK;AACzB,8CAA8C,aAAK;AACnD,oBAAoB,eAAO;AAC3B;AACA;AACA,oBAAoB,eAAO;AAC3B;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL,SAAS,eAAO;AAChB;AACA,eAAe,yBAAyB,GAAG,gBAAQ;AACnD,QAAQ,eAAO,UAAU,sCAAsC;AAC/D;AACA,aAAa,eAAO;AACpB,QAAQ,WAAW,CAAC,aAAK,EAAE,eAAO;AAClC;AACA,QAAQ,eAAO;AACf;AACA;AACA;AACA,mCAAmC,wBAAwB;AAC3D,QAAQ,WAAW,CAAC,aAAK,iBAAiB,iBAAiB,GAAG,eAAO,YAAY;AACjF,sBAAsB,aAAK;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB,GAAG,gBAAQ;AACvD;AACA;AACA,2BAA2B,WAAW;AACtC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,0BAA0B,aAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,eAAO,WAAW;AAClC,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,eAAO;AAC3B;AACA;AACA;AACA,QAAQ,WAAW,CAAC,WAAW,CAAC,aAAK;AACrC,KAAK;AACL;AACA,mC;;ACvOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mCAAmC,KAAK,QAAQ;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACO,MAAM,mBAAS;AACtB;AACA;AACA;AACA,CAAC;AACM;AACP;AACA;AACA,qC;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,+B;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP,gC;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,kBAAkB,MAAM,iCAAiC;AAChE;AACA;AACA;AACA;AACO,0BAA0B,OAAO;AACjC,kCAAkC,OAAO,GAAG,WAAW;AAC9D;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,0FAA0F,qBAAqB;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB,SAAS,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,YAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mDAAmD;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,eAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,+BAA+B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,sBAAsB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,0BAA0B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,oC;;ACpNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACa;AACrD;AACA;AACA;AACA;AACO,MAAM,kCAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,YAAY;AACrC;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,mFAAmF,qBAAqB;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,6C;;ACxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACyC;AACwD;AACjG,0BAA0B,MAAM,CAAC;AACjC;AACA;AACA;AACA;AACO,MAAM,8BAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,UAAU;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sBAAsB;AACzD;AACA;AACA;AACA,yDAAyD,MAAM;AAC/D,8BAA8B,MAAM;AACpC;AACA,gEAAgE,UAAU;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oBAAoB;AAC5D,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,iCAAiB,SAAS,8BAAc;AACrD;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,aAAa;AACrB;AACA;AACA;AACA,2C;;AChHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC6C;AACN;AACO;AACY;AACJ;AACT;AACtC;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAa;AAChC;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,mBAAa;AAC1B;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA,yBAAyB,QAAQ;AACjC;AACA;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,cAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,YAAY;AAC3D,6CAA6C,YAAY;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,YAAY;AACnD,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,YAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,8BAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kCAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,kCAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,cAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,WAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,0BAAoB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,2BAA2B,mBAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,eAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uDAAuD;AAChE;AACA,iC;;AC/bA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8G;AAC9G;AACA;AACA;AACO,MAAM,mDAAwB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iBAAiB;AACnD;AACA;AACA;AACA,wBAAwB,eAAS;AACjC;AACA;AACA,wBAAwB,0BAAoB;AAC5C;AACA,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAQ;AAC3B;AACA;AACO,qCAAqC,mDAAwB;AACpE,sD;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACiD;AACjD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,MAAM;AAC1C;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,4C;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACuC;AACD;AACkB;AACjD,MAAM,YAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,eAAe,YAAK;AACpB;AACA,QAAQ,WAAW;AACnB,QAAQ,YAAK,2BAA2B,cAAQ,gBAAgB,CAAC,gCAAe,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA,kC;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AAC+E;AACF;AAC4B;AAC7C;AAC5D;AAC0D;AACR;AACsH;AACxH;AAC4B;AACd;AACe;AACI;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,aAAI,+BAA+B,8BAAc,0BAA0B,wBAAwB;AAChH;AACA;AACA;AACA;AACO,wCAAwC,iCAAiB,yBAAyB,wBAAwB;AACjH,oC;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC+F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,YAAY;AACzD,2BAA2B,YAAY;AACvC,wBAAwB,cAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,aAAa;AACrB;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAe,mBAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,cAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvyBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kC;;AC9ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6DAA6D,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,cAAc,mBAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,iC;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACO,kBAAkB,mBAAS;AAClC,+CAA+C,mBAAa;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,sC;;AC/BA;AACgC;AACU;AACiB;AACmB;AACb;AACH;AACa;AAC3E;AACA,UAAU,aAAQ;AAClB,SAAS,GAAO;AAChB,YAAY,MAAU;AACtB,eAAe,mBAAa;AAC5B,YAAY,MAAS;AACrB,WAAW,KAAQ;AACnB,eAAe,SAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAK,mBAAK,qBAAQ,2BAAW,2BAAQ,uBAAO,0BAAW,qBAAE;AACkB;AAClF;AACA;AACA;AACA;AACO,MAAM,mBAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,eAAe;AACvE,eAAe,0FAA0F;AACzG;AACA;AACA,6BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,aAAa;AAC3C,aAAa;AACb;AACA;AACA;AACA,2BAA2B,WAAW;AACtC;AACA;AACA,gBAAgB,OAAO;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,MAAM;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,SAAS;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,YAAY;AACpB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,eAAe,YAAI;AACnB;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAM;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,kDAAkD;AAClD;AACA;AACA,mDAAmD;AACnD;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA,QAAQ,cAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACO,yBAAyB,mBAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,IAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACO,8BAA8B,mBAAW;AAChD;AACA;AACA;AACA;AACA,gBAAgB,cAAM;AACtB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;AC3SA;AACA;AACA;AACA;AACA;AAC2C;AACpC;AACP;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,oDAAoD,KAAK;AACzD;AACA,SAAS;AACT,KAAK;AACL;AACO;AACP;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACO;AACP;AACA;AACA;AACA;AACA;AACO,SAAS,gBAAK;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACO;AACP;AACA;AACA;AACO,SAAS,eAAI;AACpB;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,sC;;ACzF4B;AACE;AACA;AACG;AACL;AAC5B,iC;;ACLA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACiG;AACjG;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,+CAA+C,MAAM;AACrD,SAAS;AACT;AACA;AACA;AACO;AACP;AACA,0BAA0B,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA,IAAI,WAAK,iCAAiC,UAAU;AACpD;AACA;AACA,eAAe,cAAc,GAAG,eAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,eAAO;AAClE;AACA;AACA;AACA;AACA,iGAAiG,eAAO;AACxG,YAAY,eAAO,eAAe,oCAAoC;AACtE;AACA;AACA;AACA,eAAe,cAAc,GAAG,eAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA,sCAAsC,eAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAO,UAAU,sCAAsC;AACnE;AACA;AACA,eAAe,YAAI;AACnB;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,eAAe,YAAI;AACnB;AACA;AACA;AACA,IAAI,QAAQ;AACZ,GAAG,WAAK;AACR;AACA,IAAI,OAAO;AACX,GAAG,WAAK;AACR,WAAK;AACL,IAAI,YAAY,CAAC,eAAO;AACxB,IAAI,aAAa;AACjB,GAAG,WAAK;AACS;AACjB,iC;;ACrJ+C;AAE/C,MAAM,iBAAO,SAAQ,UAAU;IAC7B,MAAM;QACJ,OAAO,YAAI;;;;;;;;;;;;;;;;;KAiBV,CAAC;IACJ,CAAC;CACF;AACD,cAAc,CAAC,MAAM,CAAC,YAAY,EAAE,iBAAM,CAAC,CAAC;;;ACxB5C,IAAI,cAAU,IAAI,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,4CAA4C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","file":"index.js?v=1339d3a23db39f0dcfe6","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/host/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Realm = factory());\n}(this, function () { 'use strict';\n\n  // we'd like to abandon, but we can't, so just scream and break a lot of\n  // stuff. However, since we aren't really aborting the process, be careful to\n  // not throw an Error object which could be captured by child-Realm code and\n  // used to access the (too-powerful) primal-realm Error object.\n\n  function throwTantrum(s, err = undefined) {\n    const msg = `please report internal shim error: ${s}`;\n\n    // we want to log these 'should never happen' things.\n    // eslint-disable-next-line no-console\n    console.error(msg);\n    if (err) {\n      // eslint-disable-next-line no-console\n      console.error(`${err}`);\n      // eslint-disable-next-line no-console\n      console.error(`${err.stack}`);\n    }\n\n    // eslint-disable-next-line no-debugger\n    debugger;\n    throw msg;\n  }\n\n  function assert(condition, message) {\n    if (!condition) {\n      throwTantrum(message);\n    }\n  }\n\n  // Remove code modifications.\n  function cleanupSource(src) {\n    return src;\n  }\n\n  // buildChildRealm is immediately turned into a string, and this function is\n  // never referenced again, because it closes over the wrong intrinsics\n\n  function buildChildRealm(unsafeRec, BaseRealm) {\n    const {\n      initRootRealm,\n      initCompartment,\n      getRealmGlobal,\n      realmEvaluate\n    } = BaseRealm;\n\n    // This Object and Reflect are brand new, from a new unsafeRec, so no user\n    // code has been run or had a chance to manipulate them. We extract these\n    // properties for brevity, not for security. Don't ever run this function\n    // *after* user code has had a chance to pollute its environment, or it\n    // could be used to gain access to BaseRealm and primal-realm Error\n    // objects.\n    const { create, defineProperties } = Object;\n\n    const errorConstructors = new Map([\n      ['EvalError', EvalError],\n      ['RangeError', RangeError],\n      ['ReferenceError', ReferenceError],\n      ['SyntaxError', SyntaxError],\n      ['TypeError', TypeError],\n      ['URIError', URIError]\n    ]);\n\n    // Like Realm.apply except that it catches anything thrown and rethrows it\n    // as an Error from this realm\n    function callAndWrapError(target, ...args) {\n      try {\n        return target(...args);\n      } catch (err) {\n        if (Object(err) !== err) {\n          // err is a primitive value, which is safe to rethrow\n          throw err;\n        }\n        let eName, eMessage, eStack;\n        try {\n          // The child environment might seek to use 'err' to reach the\n          // parent's intrinsics and corrupt them. `${err.name}` will cause\n          // string coercion of 'err.name'. If err.name is an object (probably\n          // a String of the parent Realm), the coercion uses\n          // err.name.toString(), which is under the control of the parent. If\n          // err.name were a primitive (e.g. a number), it would use\n          // Number.toString(err.name), using the child's version of Number\n          // (which the child could modify to capture its argument for later\n          // use), however primitives don't have properties like .prototype so\n          // they aren't useful for an attack.\n          eName = `${err.name}`;\n          eMessage = `${err.message}`;\n          eStack = `${err.stack || eMessage}`;\n          // eName/eMessage/eStack are now child-realm primitive strings, and\n          // safe to expose\n        } catch (ignored) {\n          // if err.name.toString() throws, keep the (parent realm) Error away\n          // from the child\n          throw new Error('unknown error');\n        }\n        const ErrorConstructor = errorConstructors.get(eName) || Error;\n        try {\n          throw new ErrorConstructor(eMessage);\n        } catch (err2) {\n          err2.stack = eStack; // replace with the captured inner stack\n          throw err2;\n        }\n      }\n    }\n\n    class Realm {\n      constructor() {\n        // The Realm constructor is not intended to be used with the new operator\n        // or to be subclassed. It may be used as the value of an extends clause\n        // of a class definition but a super call to the Realm constructor will\n        // cause an exception.\n\n        // When Realm is called as a function, an exception is also raised because\n        // a class constructor cannot be invoked without 'new'.\n        throw new TypeError('Realm is not a constructor');\n      }\n\n      static makeRootRealm(options = {}) {\n        // This is the exposed interface.\n\n        // Bypass the constructor.\n        const r = create(Realm.prototype);\n        callAndWrapError(initRootRealm, unsafeRec, r, options);\n        return r;\n      }\n\n      static makeCompartment(options = {}) {\n        // Bypass the constructor.\n        const r = create(Realm.prototype);\n        callAndWrapError(initCompartment, unsafeRec, r, options);\n        return r;\n      }\n\n      // we omit the constructor because it is empty. All the personalization\n      // takes place in one of the two static methods,\n      // makeRootRealm/makeCompartment\n\n      get global() {\n        // this is safe against being called with strange 'this' because\n        // baseGetGlobal immediately does a trademark check (it fails unless\n        // this 'this' is present in a weakmap that is only populated with\n        // legitimate Realm instances)\n        return callAndWrapError(getRealmGlobal, this);\n      }\n\n      evaluate(x, endowments, options = {}) {\n        // safe against strange 'this', as above\n        return callAndWrapError(realmEvaluate, this, x, endowments, options);\n      }\n    }\n\n    defineProperties(Realm, {\n      toString: {\n        value: () => 'function Realm() { [shim code] }',\n        writable: false,\n        enumerable: false,\n        configurable: true\n      }\n    });\n\n    defineProperties(Realm.prototype, {\n      toString: {\n        value: () => '[object Realm]',\n        writable: false,\n        enumerable: false,\n        configurable: true\n      }\n    });\n\n    return Realm;\n  }\n\n  // The parentheses means we don't bind the 'buildChildRealm' name inside the\n  // child's namespace. this would accept an anonymous function declaration.\n  // function expression (not a declaration) so it has a completion value.\n  const buildChildRealmString = cleanupSource(\n    `'use strict'; (${buildChildRealm})`\n  );\n\n  function createRealmFacade(unsafeRec, BaseRealm) {\n    const { unsafeEval } = unsafeRec;\n\n    // The BaseRealm is the Realm class created by\n    // the shim. It's only valid for the context where\n    // it was parsed.\n\n    // The Realm facade is a lightweight class built in the\n    // context a different context, that provide a fully\n    // functional Realm class using the intrisics\n    // of that context.\n\n    // This process is simplified because all methods\n    // and properties on a realm instance already return\n    // values using the intrinsics of the realm's context.\n\n    // Invoke the BaseRealm constructor with Realm as the prototype.\n    return unsafeEval(buildChildRealmString)(unsafeRec, BaseRealm);\n  }\n\n  // Declare shorthand functions. Sharing these declarations across modules\n  // improves both consistency and minification. Unused declarations are\n  // dropped by the tree shaking process.\n\n  // we capture these, not just for brevity, but for security. If any code\n  // modifies Object to change what 'assign' points to, the Realm shim would be\n  // corrupted.\n\n  const {\n    assign,\n    create,\n    freeze,\n    defineProperties, // Object.defineProperty is allowed to fail\n    // silentlty, use Object.defineProperties instead.\n    getOwnPropertyDescriptor,\n    getOwnPropertyDescriptors,\n    getOwnPropertyNames,\n    getPrototypeOf,\n    setPrototypeOf\n  } = Object;\n\n  const {\n    apply,\n    ownKeys // Reflect.ownKeys includes Symbols and unenumerables,\n    // unlike Object.keys()\n  } = Reflect;\n\n  /**\n   * uncurryThis() See\n   * http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\n   * which only lives at\n   * http://web.archive.org/web/20160805225710/http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\n   *\n   * Performance:\n   * 1. The native call is about 10x faster on FF than chrome\n   * 2. The version using Function.bind() is about 100x slower on FF,\n   *    equal on chrome, 2x slower on Safari\n   * 3. The version using a spread and Reflect.apply() is about 10x\n   *    slower on FF, equal on chrome, 2x slower on Safari\n   *\n   * const bind = Function.prototype.bind;\n   * const uncurryThis = bind.bind(bind.call);\n   */\n  const uncurryThis = fn => (thisArg, ...args) => apply(fn, thisArg, args);\n\n  // We also capture these for security: changes to Array.prototype after the\n  // Realm shim runs shouldn't affect subsequent Realm operations.\n  const objectHasOwnProperty = uncurryThis(\n      Object.prototype.hasOwnProperty\n    ),\n    arrayFilter = uncurryThis(Array.prototype.filter),\n    arrayPop = uncurryThis(Array.prototype.pop),\n    arrayJoin = uncurryThis(Array.prototype.join),\n    arrayConcat = uncurryThis(Array.prototype.concat),\n    regexpTest = uncurryThis(RegExp.prototype.test),\n    stringIncludes = uncurryThis(String.prototype.includes);\n\n  // These value properties of the global object are non-writable,\n  // non-configurable data properties.\n  const frozenGlobalPropertyNames = [\n    // *** 18.1 Value Properties of the Global Object\n\n    'Infinity',\n    'NaN',\n    'undefined'\n  ];\n\n  // All the following stdlib items have the same name on both our intrinsics\n  // object and on the global object. Unlike Infinity/NaN/undefined, these\n  // should all be writable and configurable. This is divided into two\n  // sets. The stable ones are those the shim can freeze early because\n  // we don't expect anyone will want to mutate them. The unstable ones\n  // are the ones that we correctly initialize to writable and\n  // configurable so that they can still be replaced or removed.\n  const stableGlobalPropertyNames = [\n    // *** 18.2 Function Properties of the Global Object\n\n    // 'eval', // comes from safeEval instead\n    'isFinite',\n    'isNaN',\n    'parseFloat',\n    'parseInt',\n\n    'decodeURI',\n    'decodeURIComponent',\n    'encodeURI',\n    'encodeURIComponent',\n\n    // *** 18.3 Constructor Properties of the Global Object\n\n    'Array',\n    'ArrayBuffer',\n    'Boolean',\n    'DataView',\n    // 'Date',  // Unstable\n    // 'Error',  // Unstable\n    'EvalError',\n    'Float32Array',\n    'Float64Array',\n    // 'Function',  // comes from safeFunction instead\n    'Int8Array',\n    'Int16Array',\n    'Int32Array',\n    'Map',\n    'Number',\n    'Object',\n    // 'Promise',  // Unstable\n    // 'Proxy',  // Unstable\n    'RangeError',\n    'ReferenceError',\n    // 'RegExp',  // Unstable\n    'Set',\n    // 'SharedArrayBuffer'  // removed on Jan 5, 2018\n    'String',\n    'Symbol',\n    'SyntaxError',\n    'TypeError',\n    'Uint8Array',\n    'Uint8ClampedArray',\n    'Uint16Array',\n    'Uint32Array',\n    'URIError',\n    'WeakMap',\n    'WeakSet',\n\n    // *** 18.4 Other Properties of the Global Object\n\n    // 'Atomics', // removed on Jan 5, 2018\n    'JSON',\n    'Math',\n    'Reflect',\n\n    // *** Annex B\n\n    'escape',\n    'unescape'\n\n    // *** ECMA-402\n\n    // 'Intl'  // Unstable\n\n    // *** ESNext\n\n    // 'Realm' // Comes from createRealmGlobalObject()\n  ];\n\n  const unstableGlobalPropertyNames = [\n    'Date',\n    'Error',\n    'Promise',\n    'Proxy',\n    'RegExp',\n    'Intl'\n  ];\n\n  function getSharedGlobalDescs(unsafeGlobal) {\n    const descriptors = {};\n\n    function describe(names, writable, enumerable, configurable) {\n      for (const name of names) {\n        const desc = getOwnPropertyDescriptor(unsafeGlobal, name);\n        if (desc) {\n          // Abort if an accessor is found on the unsafe global object\n          // instead of a data property. We should never get into this\n          // non standard situation.\n          assert(\n            'value' in desc,\n            `unexpected accessor on global property: ${name}`\n          );\n\n          descriptors[name] = {\n            value: desc.value,\n            writable,\n            enumerable,\n            configurable\n          };\n        }\n      }\n    }\n\n    describe(frozenGlobalPropertyNames, false, false, false);\n    // The following is correct but expensive.\n    // describe(stableGlobalPropertyNames, true, false, true);\n    // Instead, for now, we let these get optimized.\n    //\n    // TODO: We should provide an option to turn this optimization off,\n    // by feeding \"true, false, true\" here instead.\n    describe(stableGlobalPropertyNames, false, false, false);\n    // These we keep replaceable and removable, because we expect\n    // others, e.g., SES, may want to do so.\n    describe(unstableGlobalPropertyNames, true, false, true);\n\n    return descriptors;\n  }\n\n  // Adapted from SES/Caja - Copyright (C) 2011 Google Inc.\n  // https://github.com/google/caja/blob/master/src/com/google/caja/ses/startSES.js\n  // https://github.com/google/caja/blob/master/src/com/google/caja/ses/repairES5.js\n\n  /**\n   * Replace the legacy accessors of Object to comply with strict mode\n   * and ES2016 semantics, we do this by redefining them while in 'use strict'.\n   *\n   * todo: list the issues resolved\n   *\n   * This function can be used in two ways: (1) invoked directly to fix the primal\n   * realm's Object.prototype, and (2) converted to a string to be executed\n   * inside each new RootRealm to fix their Object.prototypes. Evaluation requires\n   * the function to have no dependencies, so don't import anything from\n   * the outside.\n   */\n\n  // todo: this file should be moved out to a separate repo and npm module.\n  function repairAccessors() {\n    const {\n      defineProperty,\n      defineProperties,\n      getOwnPropertyDescriptor,\n      getPrototypeOf,\n      prototype: objectPrototype\n    } = Object;\n\n    // On some platforms, the implementation of these functions act as\n    // if they are in sloppy mode: if they're invoked badly, they will\n    // expose the global object, so we need to repair these for\n    // security. Thus it is our responsibility to fix this, and we need\n    // to include repairAccessors. E.g. Chrome in 2016.\n\n    try {\n      // Verify that the method is not callable.\n      // eslint-disable-next-line no-restricted-properties, no-underscore-dangle\n      (0, objectPrototype.__lookupGetter__)('x');\n    } catch (ignore) {\n      // Throws, no need to patch.\n      return;\n    }\n\n    function toObject(obj) {\n      if (obj === undefined || obj === null) {\n        throw new TypeError(`can't convert undefined or null to object`);\n      }\n      return Object(obj);\n    }\n\n    function asPropertyName(obj) {\n      if (typeof obj === 'symbol') {\n        return obj;\n      }\n      return `${obj}`;\n    }\n\n    function aFunction(obj, accessor) {\n      if (typeof obj !== 'function') {\n        throw TypeError(`invalid ${accessor} usage`);\n      }\n      return obj;\n    }\n\n    defineProperties(objectPrototype, {\n      __defineGetter__: {\n        value: function __defineGetter__(prop, func) {\n          const O = toObject(this);\n          defineProperty(O, prop, {\n            get: aFunction(func, 'getter'),\n            enumerable: true,\n            configurable: true\n          });\n        }\n      },\n      __defineSetter__: {\n        value: function __defineSetter__(prop, func) {\n          const O = toObject(this);\n          defineProperty(O, prop, {\n            set: aFunction(func, 'setter'),\n            enumerable: true,\n            configurable: true\n          });\n        }\n      },\n      __lookupGetter__: {\n        value: function __lookupGetter__(prop) {\n          let O = toObject(this);\n          prop = asPropertyName(prop);\n          let desc;\n          while (O && !(desc = getOwnPropertyDescriptor(O, prop))) {\n            O = getPrototypeOf(O);\n          }\n          return desc && desc.get;\n        }\n      },\n      __lookupSetter__: {\n        value: function __lookupSetter__(prop) {\n          let O = toObject(this);\n          prop = asPropertyName(prop);\n          let desc;\n          while (O && !(desc = getOwnPropertyDescriptor(O, prop))) {\n            O = getPrototypeOf(O);\n          }\n          return desc && desc.set;\n        }\n      }\n    });\n  }\n\n  // Adapted from SES/Caja\n  // Copyright (C) 2011 Google Inc.\n  // https://github.com/google/caja/blob/master/src/com/google/caja/ses/startSES.js\n  // https://github.com/google/caja/blob/master/src/com/google/caja/ses/repairES5.js\n\n  /**\n   * This block replaces the original Function constructor, and the original\n   * %GeneratorFunction% %AsyncFunction% and %AsyncGeneratorFunction%, with\n   * safe replacements that throw if invoked.\n   *\n   * These are all reachable via syntax, so it isn't sufficient to just\n   * replace global properties with safe versions. Our main goal is to prevent\n   * access to the Function constructor through these starting points.\n\n   * After this block is done, the originals must no longer be reachable, unless\n   * a copy has been made, and funtions can only be created by syntax (using eval)\n   * or by invoking a previously saved reference to the originals.\n   */\n\n  // todo: this file should be moved out to a separate repo and npm module.\n  function repairFunctions() {\n    const { defineProperties, getPrototypeOf, setPrototypeOf } = Object;\n\n    /**\n     * The process to repair constructors:\n     * 1. Create an instance of the function by evaluating syntax\n     * 2. Obtain the prototype from the instance\n     * 3. Create a substitute tamed constructor\n     * 4. Replace the original constructor with the tamed constructor\n     * 5. Replace tamed constructor prototype property with the original one\n     * 6. Replace its [[Prototype]] slot with the tamed constructor of Function\n     */\n    function repairFunction(name, declaration) {\n      let FunctionInstance;\n      try {\n        // eslint-disable-next-line no-new-func\n        FunctionInstance = (0, eval)(declaration);\n      } catch (e) {\n        if (e instanceof SyntaxError) {\n          // Prevent failure on platforms where async and/or generators\n          // are not supported.\n          return;\n        }\n        // Re-throw\n        throw e;\n      }\n      const FunctionPrototype = getPrototypeOf(FunctionInstance);\n\n      // Prevents the evaluation of source when calling constructor on the\n      // prototype of functions.\n      const TamedFunction = function() {\n        throw new TypeError('Not available');\n      };\n      defineProperties(TamedFunction, { name: { value: name } });\n\n      // (new Error()).constructors does not inherit from Function, because Error\n      // was defined before ES6 classes. So we don't need to repair it too.\n\n      // (Error()).constructor inherit from Function, which gets a tamed\n      // constructor here.\n\n      // todo: in an ES6 class that does not inherit from anything, what does its\n      // constructor inherit from? We worry that it inherits from Function, in\n      // which case instances could give access to unsafeFunction. markm says\n      // we're fine: the constructor inherits from Object.prototype\n\n      // This line replaces the original constructor in the prototype chain\n      // with the tamed one. No copy of the original is peserved.\n      defineProperties(FunctionPrototype, {\n        constructor: { value: TamedFunction }\n      });\n\n      // This line sets the tamed constructor's prototype data property to\n      // the original one.\n      defineProperties(TamedFunction, {\n        prototype: { value: FunctionPrototype }\n      });\n\n      if (TamedFunction !== Function.prototype.constructor) {\n        // Ensures that all functions meet \"instanceof Function\" in a realm.\n        setPrototypeOf(TamedFunction, Function.prototype.constructor);\n      }\n    }\n\n    // Here, the order of operation is important: Function needs to be repaired\n    // first since the other repaired constructors need to inherit from the tamed\n    // Function function constructor.\n\n    // note: this really wants to be part of the standard, because new\n    // constructors may be added in the future, reachable from syntax, and this\n    // list must be updated to match.\n\n    // \"plain arrow functions\" inherit from Function.prototype\n\n    repairFunction('Function', '(function(){})');\n    repairFunction('GeneratorFunction', '(function*(){})');\n    repairFunction('AsyncFunction', '(async function(){})');\n    repairFunction('AsyncGeneratorFunction', '(async function*(){})');\n  }\n\n  // this module must never be importable outside the Realm shim itself\n\n  // A \"context\" is a fresh unsafe Realm as given to us by existing platforms.\n  // We need this to implement the shim. However, when Realms land for real,\n  // this feature will be provided by the underlying engine instead.\n\n  // note: in a node module, the top-level 'this' is not the global object\n  // (it's *something* but we aren't sure what), however an indirect eval of\n  // 'this' will be the correct global object.\n\n  const unsafeGlobalSrc = \"'use strict'; this\";\n  const unsafeGlobalEvalSrc = `(0, eval)(\"'use strict'; this\")`;\n\n  // This method is only exported for testing purposes.\n  function createNewUnsafeGlobalForNode() {\n    // Note that webpack and others will shim 'vm' including the method\n    // 'runInNewContext', so the presence of vm is not a useful check\n\n    // TODO: Find a better test that works with bundlers\n    // eslint-disable-next-line no-new-func\n    const isNode = new Function(\n      'try {return this===global}catch(e){return false}'\n    )();\n\n    if (!isNode) {\n      return undefined;\n    }\n\n    // eslint-disable-next-line global-require\n    const vm = require('vm');\n\n    // Use unsafeGlobalEvalSrc to ensure we get the right 'this'.\n    const unsafeGlobal = vm.runInNewContext(unsafeGlobalEvalSrc);\n\n    return unsafeGlobal;\n  }\n\n  // This method is only exported for testing purposes.\n  function createNewUnsafeGlobalForBrowser() {\n    if (typeof document === 'undefined') {\n      return undefined;\n    }\n    const iframe = document.createElement('iframe');\n    iframe.style.display = 'none';\n\n    document.body.appendChild(iframe);\n    const unsafeGlobal = iframe.contentWindow.eval(unsafeGlobalSrc);\n\n    // We keep the iframe attached to the DOM because removing it\n    // causes its global object to lose intrinsics, its eval()\n    // function to evaluate code, etc.\n\n    // TODO: can we remove and garbage-collect the iframes?\n\n    return unsafeGlobal;\n  }\n\n  const getNewUnsafeGlobal = () => {\n    const newUnsafeGlobalForBrowser = createNewUnsafeGlobalForBrowser();\n    const newUnsafeGlobalForNode = createNewUnsafeGlobalForNode();\n    if (\n      (!newUnsafeGlobalForBrowser && !newUnsafeGlobalForNode) ||\n      (newUnsafeGlobalForBrowser && newUnsafeGlobalForNode)\n    ) {\n      throw new Error('unexpected platform, unable to create Realm');\n    }\n    return newUnsafeGlobalForBrowser || newUnsafeGlobalForNode;\n  };\n\n  // The unsafeRec is shim-specific. It acts as the mechanism to obtain a fresh\n  // set of intrinsics together with their associated eval and Function\n  // evaluators. These must be used as a matched set, since the evaluators are\n  // tied to a set of intrinsics, aka the \"undeniables\". If it were possible to\n  // mix-and-match them from different contexts, that would enable some\n  // attacks.\n  function createUnsafeRec(unsafeGlobal, allShims = []) {\n    const sharedGlobalDescs = getSharedGlobalDescs(unsafeGlobal);\n\n    return freeze({\n      unsafeGlobal,\n      sharedGlobalDescs,\n      unsafeEval: unsafeGlobal.eval,\n      unsafeFunction: unsafeGlobal.Function,\n      allShims\n    });\n  }\n\n  const repairAccessorsShim = cleanupSource(\n    `\"use strict\"; (${repairAccessors})();`\n  );\n  const repairFunctionsShim = cleanupSource(\n    `\"use strict\"; (${repairFunctions})();`\n  );\n\n  // Create a new unsafeRec from a brand new context, with new intrinsics and a\n  // new global object\n  function createNewUnsafeRec(allShims) {\n    const unsafeGlobal = getNewUnsafeGlobal();\n    unsafeGlobal.eval(repairAccessorsShim);\n    unsafeGlobal.eval(repairFunctionsShim);\n    return createUnsafeRec(unsafeGlobal, allShims);\n  }\n\n  // Create a new unsafeRec from the current context, where the Realm shim is\n  // being parsed and executed, aka the \"Primal Realm\"\n  function createCurrentUnsafeRec() {\n    const unsafeGlobal = (0, eval)(unsafeGlobalSrc);\n    repairAccessors();\n    repairFunctions();\n    return createUnsafeRec(unsafeGlobal);\n  }\n\n  // todo: think about how this interacts with endowments, check for conflicts\n  // between the names being optimized and the ones added by endowments\n\n  /**\n   * Simplified validation of indentifier names: may only contain alphanumeric\n   * characters (or \"$\" or \"_\"), and may not start with a digit. This is safe\n   * and does not reduces the compatibility of the shim. The motivation for\n   * this limitation was to decrease the complexity of the implementation,\n   * and to maintain a resonable level of performance.\n   * Note: \\w is equivalent [a-zA-Z_0-9]\n   * See 11.6.1 Identifier Names\n   */\n  const identifierPattern = /^[a-zA-Z_$][\\w$]*$/;\n\n  /**\n   * In JavaScript you cannot use these reserved words as variables.\n   * See 11.6.1 Identifier Names\n   */\n  const keywords = new Set([\n    // 11.6.2.1 Keywords\n    'await',\n    'break',\n    'case',\n    'catch',\n    'class',\n    'const',\n    'continue',\n    'debugger',\n    'default',\n    'delete',\n    'do',\n    'else',\n    'export',\n    'extends',\n    'finally',\n    'for',\n    'function',\n    'if',\n    'import',\n    'in',\n    'instanceof',\n    'new',\n    'return',\n    'super',\n    'switch',\n    'this',\n    'throw',\n    'try',\n    'typeof',\n    'var',\n    'void',\n    'while',\n    'with',\n    'yield',\n\n    // Also reserved when parsing strict mode code\n    'let',\n    'static',\n\n    // 11.6.2.2 Future Reserved Words\n    'enum',\n\n    // Also reserved when parsing strict mode code\n    'implements',\n    'package',\n    'protected',\n    'interface',\n    'private',\n    'public',\n\n    // Reserved but not mentioned in specs\n    'await',\n\n    'null',\n    'true',\n    'false',\n\n    'this',\n    'arguments'\n  ]);\n\n  /**\n   * getOptimizableGlobals()\n   * What variable names might it bring into scope? These include all\n   * property names which can be variable names, including the names\n   * of inherited properties. It excludes symbols and names which are\n   * keywords. We drop symbols safely. Currently, this shim refuses\n   * service if any of the names are keywords or keyword-like. This is\n   * safe and only prevent performance optimization.\n   */\n  function getOptimizableGlobals(safeGlobal) {\n    const descs = getOwnPropertyDescriptors(safeGlobal);\n\n    // getOwnPropertyNames does ignore Symbols so we don't need this extra check:\n    // typeof name === 'string' &&\n    const constants = arrayFilter(getOwnPropertyNames(descs), name => {\n      // Ensure we have a valid identifier. We use regexpTest rather than\n      // /../.test() to guard against the case where RegExp has been poisoned.\n      if (\n        name === 'eval' ||\n        keywords.has(name) ||\n        !regexpTest(identifierPattern, name)\n      ) {\n        return false;\n      }\n\n      const desc = descs[name];\n      return (\n        //\n        // The getters will not have .writable, don't let the falsyness of\n        // 'undefined' trick us: test with === false, not ! . However descriptors\n        // inherit from the (potentially poisoned) global object, so we might see\n        // extra properties which weren't really there. Accessor properties have\n        // 'get/set/enumerable/configurable', while data properties have\n        // 'value/writable/enumerable/configurable'.\n        desc.configurable === false &&\n        desc.writable === false &&\n        //\n        // Checks for data properties because they're the only ones we can\n        // optimize (accessors are most likely non-constant). Descriptors can't\n        // can't have accessors and value properties at the same time, therefore\n        // this check is sufficient. Using explicit own property deal with the\n        // case where Object.prototype has been poisoned.\n        objectHasOwnProperty(desc, 'value')\n      );\n    });\n\n    return constants;\n  }\n\n  /**\n   * alwaysThrowHandler is a proxy handler which throws on any trap called.\n   * It's made from a proxy with a get trap that throws. Its target is\n   * an immutable (frozen) object and is safe to share.\n   */\n  const alwaysThrowHandler = new Proxy(freeze({}), {\n    get(target, prop) {\n      throwTantrum(`unexpected scope handler trap called: ${prop}`);\n    }\n  });\n\n  /**\n   * ScopeHandler manages a Proxy which serves as the global scope for the\n   * safeEvaluator operation (the Proxy is the argument of a 'with' binding).\n   * As described in createSafeEvaluator(), it has several functions:\n   * - allow the very first (and only the very first) use of 'eval' to map to\n   *   the real (unsafe) eval function, so it acts as a 'direct eval' and can\n   *    access its lexical scope (which maps to the 'with' binding, which the\n   *   ScopeHandler also controls).\n   * - ensure that all subsequent uses of 'eval' map to the safeEvaluator,\n   *   which lives as the 'eval' property of the safeGlobal.\n   * - route all other property lookups at the safeGlobal.\n   * - hide the unsafeGlobal which lives on the scope chain above the 'with'.\n   * - ensure the Proxy invariants despite some global properties being frozen.\n   */\n  function createScopeHandler(unsafeRec, safeGlobal, sloppyGlobals) {\n    const { unsafeGlobal, unsafeEval } = unsafeRec;\n\n    // This flag allow us to determine if the eval() call is an done by the\n    // realm's code or if it is user-land invocation, so we can react differently.\n    let useUnsafeEvaluator = false;\n\n    return {\n      // The scope handler throws if any trap other than get/set/has are run\n      // (e.g. getOwnPropertyDescriptors, apply, getPrototypeOf).\n      // eslint-disable-next-line no-proto\n      __proto__: alwaysThrowHandler,\n\n      allowUnsafeEvaluatorOnce() {\n        useUnsafeEvaluator = true;\n      },\n\n      unsafeEvaluatorAllowed() {\n        return useUnsafeEvaluator;\n      },\n\n      get(target, prop) {\n        // Special treatment for eval. The very first lookup of 'eval' gets the\n        // unsafe (real direct) eval, so it will get the lexical scope that uses\n        // the 'with' context.\n        if (prop === 'eval') {\n          // test that it is true rather than merely truthy\n          if (useUnsafeEvaluator === true) {\n            // revoke before use\n            useUnsafeEvaluator = false;\n            return unsafeEval;\n          }\n          return target.eval;\n        }\n\n        // todo: shim integrity, capture Symbol.unscopables\n        if (prop === Symbol.unscopables) {\n          // Safe to return a primal realm Object here because the only code that\n          // can do a get() on a non-string is the internals of with() itself,\n          // and the only thing it does is to look for properties on it. User\n          // code cannot do a lookup on non-strings.\n          return undefined;\n        }\n\n        // Properties of the global.\n        if (prop in target) {\n          return target[prop];\n        }\n\n        // Prevent the lookup for other properties.\n        return undefined;\n      },\n\n      // eslint-disable-next-line class-methods-use-this\n      set(target, prop, value) {\n        // todo: allow modifications when target.hasOwnProperty(prop) and it\n        // is writable, assuming we've already rejected overlap (see\n        // createSafeEvaluatorFactory.factory). This TypeError gets replaced with\n        // target[prop] = value\n        if (objectHasOwnProperty(target, prop)) {\n          // todo: shim integrity: TypeError, String\n          throw new TypeError(`do not modify endowments like ${String(prop)}`);\n        }\n\n        safeGlobal[prop] = value;\n\n        // Return true after successful set.\n        return true;\n      },\n\n      // we need has() to return false for some names to prevent the lookup  from\n      // climbing the scope chain and eventually reaching the unsafeGlobal\n      // object, which is bad.\n\n      // note: unscopables! every string in Object[Symbol.unscopables]\n\n      // todo: we'd like to just have has() return true for everything, and then\n      // use get() to raise a ReferenceError for anything not on the safe global.\n      // But we want to be compatible with ReferenceError in the normal case and\n      // the lack of ReferenceError in the 'typeof' case. Must either reliably\n      // distinguish these two cases (the trap behavior might be different), or\n      // we rely on a mandatory source-to-source transform to change 'typeof abc'\n      // to XXX. We already need a mandatory parse to prevent the 'import',\n      // since it's a special form instead of merely being a global variable/\n\n      // note: if we make has() return true always, then we must implement a\n      // set() trap to avoid subverting the protection of strict mode (it would\n      // accept assignments to undefined globals, when it ought to throw\n      // ReferenceError for such assignments)\n\n      has(target, prop) {\n        // proxies stringify 'prop', so no TOCTTOU danger here\n\n        if (sloppyGlobals) {\n          // Everything is potentially available.\n          return true;\n        }\n\n        // unsafeGlobal: hide all properties of unsafeGlobal at the\n        // expense of 'typeof' being wrong for those properties. For\n        // example, in the browser, evaluating 'document = 3', will add\n        // a property to safeGlobal instead of throwing a\n        // ReferenceError.\n        if (prop === 'eval' || prop in target || prop in unsafeGlobal) {\n          return true;\n        }\n\n        return false;\n      }\n    };\n  }\n\n  // https://www.ecma-international.org/ecma-262/9.0/index.html#sec-html-like-comments\n\n  // The proposed dynamic import expression is the only syntax currently\n  // proposed, that can appear in non-module JavaScript code, that\n  // enables direct access to the outside world that cannot be\n  // surpressed or intercepted without parsing and rewriting. Instead,\n  // this shim conservatively rejects any source text that seems to\n  // contain such an expression. To do this safely without parsing, we\n  // must also reject some valid programs, i.e., those containing\n  // apparent import expressions in literal strings or comments.\n\n  // The current conservative rule looks for the identifier \"import\"\n  // followed by either an open paren or something that looks like the\n  // beginning of a comment. We assume that we do not need to worry\n  // about html comment syntax because that was already rejected by\n  // rejectHtmlComments.\n\n  // this \\s *must* match all kinds of syntax-defined whitespace. If e.g.\n  // U+2028 (LINE SEPARATOR) or U+2029 (PARAGRAPH SEPARATOR) is treated as\n  // whitespace by the parser, but not matched by /\\s/, then this would admit\n  // an attack like: import\\u2028('power.js') . We're trying to distinguish\n  // something like that from something like importnotreally('power.js') which\n  // is perfectly safe.\n\n  const importPattern = /\\bimport\\s*(?:\\(|\\/[/*])/;\n\n  function rejectImportExpressions(s) {\n    const index = s.search(importPattern);\n    if (index !== -1) {\n      const linenum = s.slice(0, index).split('\\n').length; // more or less\n      throw new SyntaxError(\n        `possible import expression rejected around line ${linenum}`\n      );\n    }\n  }\n\n  // The shim cannot correctly emulate a direct eval as explained at\n  // https://github.com/Agoric/realms-shim/issues/12\n  // Without rejecting apparent direct eval syntax, we would\n  // accidentally evaluate these with an emulation of indirect eval. Tp\n  // prevent future compatibility problems, in shifting from use of the\n  // shim to genuine platform support for the proposal, we should\n  // instead statically reject code that seems to contain a direct eval\n  // expression.\n  //\n  // As with the dynamic import expression, to avoid a full parse, we do\n  // this approximately with a regexp, that will also reject strings\n  // that appear safely in comments or strings. Unlike dynamic import,\n  // if we miss some, this only creates future compat problems, not\n  // security problems. Thus, we are only trying to catch innocent\n  // occurrences, not malicious one. In particular, `(eval)(...)` is\n  // direct eval syntax that would not be caught by the following regexp.\n\n  const someDirectEvalPattern = /\\beval\\s*(?:\\(|\\/[/*])/;\n\n  function rejectSomeDirectEvalExpressions(s) {\n    const index = s.search(someDirectEvalPattern);\n    if (index !== -1) {\n      const linenum = s.slice(0, index).split('\\n').length; // more or less\n      throw new SyntaxError(\n        `possible direct eval expression rejected around line ${linenum}`\n      );\n    }\n  }\n\n  function rejectDangerousSources(s) {\n    rejectImportExpressions(s);\n    rejectSomeDirectEvalExpressions(s);\n  }\n\n  // Export a rewriter transform.\n  const rejectDangerousSourcesTransform = {\n    rewrite(rs) {\n      rejectDangerousSources(rs.src);\n      return rs;\n    }\n  };\n\n  // Portions adapted from V8 - Copyright 2016 the V8 project authors.\n\n  function buildOptimizer(constants) {\n    // No need to build an oprimizer when there are no constants.\n    if (constants.length === 0) return '';\n    // Use 'this' to avoid going through the scope proxy, which is unecessary\n    // since the optimizer only needs references to the safe global.\n    return `const {${arrayJoin(constants, ',')}} = this;`;\n  }\n\n  function createScopedEvaluatorFactory(unsafeRec, constants) {\n    const { unsafeFunction } = unsafeRec;\n\n    const optimizer = buildOptimizer(constants);\n\n    // Create a function in sloppy mode, so that we can use 'with'. It returns\n    // a function in strict mode that evaluates the provided code using direct\n    // eval, and thus in strict mode in the same scope. We must be very careful\n    // to not create new names in this scope\n\n    // 1: we use 'with' (around a Proxy) to catch all free variable names. The\n    // first 'arguments[0]' holds the Proxy which safely wraps the safeGlobal\n    // 2: 'optimizer' catches common variable names for speed\n    // 3: The inner strict function is effectively passed two parameters:\n    //    a) its arguments[0] is the source to be directly evaluated.\n    //    b) its 'this' is the this binding seen by the code being\n    //       directly evaluated.\n\n    // everything in the 'optimizer' string is looked up in the proxy\n    // (including an 'arguments[0]', which points at the Proxy). 'function' is\n    // a keyword, not a variable, so it is not looked up. then 'eval' is looked\n    // up in the proxy, that's the first time it is looked up after\n    // useUnsafeEvaluator is turned on, so the proxy returns the real the\n    // unsafeEval, which satisfies the IsDirectEvalTrap predicate, so it uses\n    // the direct eval and gets the lexical scope. The second 'arguments[0]' is\n    // looked up in the context of the inner function. The *contents* of\n    // arguments[0], because we're using direct eval, are looked up in the\n    // Proxy, by which point the useUnsafeEvaluator switch has been flipped\n    // back to 'false', so any instances of 'eval' in that string will get the\n    // safe evaluator.\n\n    return unsafeFunction(`\n    with (arguments[0]) {\n      ${optimizer}\n      return function() {\n        'use strict';\n        return eval(arguments[0]);\n      };\n    }\n  `);\n  }\n\n  function createSafeEvaluatorFactory(\n    unsafeRec,\n    safeGlobal,\n    transforms,\n    sloppyGlobals\n  ) {\n    const { unsafeFunction } = unsafeRec;\n\n    const scopeHandler = createScopeHandler(unsafeRec, safeGlobal, sloppyGlobals);\n    const constants = getOptimizableGlobals(safeGlobal);\n    const scopedEvaluatorFactory = createScopedEvaluatorFactory(\n      unsafeRec,\n      constants\n    );\n\n    function factory(endowments = {}, options = {}) {\n      const localTransforms = options.transforms || [];\n      const realmTransforms = transforms || [];\n\n      const mandatoryTransforms = [rejectDangerousSourcesTransform];\n      const allTransforms = [\n        ...localTransforms,\n        ...realmTransforms,\n        ...mandatoryTransforms\n      ];\n\n      // We use the the concise method syntax to create an eval without a\n      // [[Construct]] behavior (such that the invocation \"new eval()\" throws\n      // TypeError: eval is not a constructor\"), but which still accepts a\n      // 'this' binding.\n      const safeEval = {\n        eval(src) {\n          src = `${src}`;\n          // Rewrite the source, threading through rewriter state as necessary.\n          const rewriterState = allTransforms.reduce(\n            (rs, transform) => (transform.rewrite ? transform.rewrite(rs) : rs),\n            { src, endowments }\n          );\n          src = rewriterState.src;\n\n          const scopeTarget = create(\n            safeGlobal,\n            getOwnPropertyDescriptors(rewriterState.endowments)\n          );\n          const scopeProxy = new Proxy(scopeTarget, scopeHandler);\n          const scopedEvaluator = apply(scopedEvaluatorFactory, safeGlobal, [\n            scopeProxy\n          ]);\n\n          scopeHandler.allowUnsafeEvaluatorOnce();\n          let err;\n          try {\n            // Ensure that \"this\" resolves to the safe global.\n            return apply(scopedEvaluator, safeGlobal, [src]);\n          } catch (e) {\n            // stash the child-code error in hopes of debugging the internal failure\n            err = e;\n            throw e;\n          } finally {\n            // belt and suspenders: the proxy switches this off immediately after\n            // the first access, but if that's not the case we abort.\n            if (scopeHandler.unsafeEvaluatorAllowed()) {\n              throwTantrum('handler did not revoke useUnsafeEvaluator', err);\n            }\n          }\n        }\n      }.eval;\n\n      // safeEval's prototype is currently the primal realm's\n      // Function.prototype, which we must not let escape. To make 'eval\n      // instanceof Function' be true inside the realm, we need to point it at\n      // the RootRealm's value.\n\n      // Ensure that eval from any compartment in a root realm is an instance\n      // of Function in any compartment of the same root realm.\n      setPrototypeOf(safeEval, unsafeFunction.prototype);\n\n      assert(getPrototypeOf(safeEval).constructor !== Function, 'hide Function');\n      assert(\n        getPrototypeOf(safeEval).constructor !== unsafeFunction,\n        'hide unsafeFunction'\n      );\n\n      // note: be careful to not leak our primal Function.prototype by setting\n      // this to a plain arrow function. Now that we have safeEval, use it.\n      defineProperties(safeEval, {\n        toString: {\n          // We break up the following literal string so that an\n          // apparent direct eval syntax does not appear in this\n          // file. Thus, we avoid rejection by the overly eager\n          // rejectDangerousSources.\n          value: safeEval(\"() => 'function eval' + '() { [shim code] }'\"),\n          writable: false,\n          enumerable: false,\n          configurable: true\n        }\n      });\n\n      return safeEval;\n    }\n\n    return factory;\n  }\n\n  function createSafeEvaluator(safeEvaluatorFactory) {\n    return safeEvaluatorFactory();\n  }\n\n  function createSafeEvaluatorWhichTakesEndowments(safeEvaluatorFactory) {\n    return (x, endowments, options = {}) =>\n      safeEvaluatorFactory(endowments, options)(x);\n  }\n\n  /**\n   * A safe version of the native Function which relies on\n   * the safety of evalEvaluator for confinement.\n   */\n  function createFunctionEvaluator(unsafeRec, safeEval) {\n    const { unsafeFunction, unsafeGlobal } = unsafeRec;\n\n    const safeFunction = function Function(...params) {\n      const functionBody = `${arrayPop(params) || ''}`;\n      let functionParams = `${arrayJoin(params, ',')}`;\n      if (!regexpTest(/^[\\w\\s,]*$/, functionParams)) {\n        throw new unsafeGlobal.SyntaxError(\n          'shim limitation: Function arg must be simple ASCII identifiers, possibly separated by commas: no default values, pattern matches, or non-ASCII parameter names'\n        );\n        // this protects against Matt Austin's clever attack:\n        // Function(\"arg=`\", \"/*body`){});({x: this/**/\")\n        // which would turn into\n        //     (function(arg=`\n        //     /*``*/){\n        //      /*body`){});({x: this/**/\n        //     })\n        // which parses as a default argument of `\\n/*``*/){\\n/*body` , which\n        // is a pair of template literals back-to-back (so the first one\n        // nominally evaluates to the parser to use on the second one), which\n        // can't actually execute (because the first literal evals to a string,\n        // which can't be a parser function), but that doesn't matter because\n        // the function is bypassed entirely. When that gets evaluated, it\n        // defines (but does not invoke) a function, then evaluates a simple\n        // {x: this} expression, giving access to the safe global.\n      }\n\n      // Is this a real functionBody, or is someone attempting an injection\n      // attack? This will throw a SyntaxError if the string is not actually a\n      // function body. We coerce the body into a real string above to prevent\n      // someone from passing an object with a toString() that returns a safe\n      // string the first time, but an evil string the second time.\n      // eslint-disable-next-line no-new, new-cap\n      new unsafeFunction(functionBody);\n\n      if (stringIncludes(functionParams, ')')) {\n        // If the formal parameters string include ) - an illegal\n        // character - it may make the combined function expression\n        // compile. We avoid this problem by checking for this early on.\n\n        // note: v8 throws just like this does, but chrome accepts\n        // e.g. 'a = new Date()'\n        throw new unsafeGlobal.SyntaxError(\n          'shim limitation: Function arg string contains parenthesis'\n        );\n        // todo: shim integrity threat if they change SyntaxError\n      }\n\n      // todo: check to make sure this .length is safe. markm says safe.\n      if (functionParams.length > 0) {\n        // If the formal parameters include an unbalanced block comment, the\n        // function must be rejected. Since JavaScript does not allow nested\n        // comments we can include a trailing block comment to catch this.\n        functionParams += '\\n/*``*/';\n      }\n\n      const src = `(function(${functionParams}){\\n${functionBody}\\n})`;\n\n      return safeEval(src);\n    };\n\n    // Ensure that Function from any compartment in a root realm can be used\n    // with instance checks in any compartment of the same root realm.\n    setPrototypeOf(safeFunction, unsafeFunction.prototype);\n\n    assert(\n      getPrototypeOf(safeFunction).constructor !== Function,\n      'hide Function'\n    );\n    assert(\n      getPrototypeOf(safeFunction).constructor !== unsafeFunction,\n      'hide unsafeFunction'\n    );\n\n    defineProperties(safeFunction, {\n      // Ensure that any function created in any compartment in a root realm is an\n      // instance of Function in any compartment of the same root ralm.\n      prototype: { value: unsafeFunction.prototype },\n\n      // Provide a custom output without overwriting the\n      // Function.prototype.toString which is called by some third-party\n      // libraries.\n      toString: {\n        value: safeEval(\"() => 'function Function() { [shim code] }'\"),\n        writable: false,\n        enumerable: false,\n        configurable: true\n      }\n    });\n\n    return safeFunction;\n  }\n\n  // Mimic private members on the realm instances.\n  // We define it in the same module and do not export it.\n  const RealmRecForRealmInstance = new WeakMap();\n\n  function getRealmRecForRealmInstance(realm) {\n    // Detect non-objects.\n    assert(Object(realm) === realm, 'bad object, not a Realm instance');\n    // Realm instance has no realmRec. Should not proceed.\n    assert(RealmRecForRealmInstance.has(realm), 'Realm instance has no record');\n\n    return RealmRecForRealmInstance.get(realm);\n  }\n\n  function registerRealmRecForRealmInstance(realm, realmRec) {\n    // Detect non-objects.\n    assert(Object(realm) === realm, 'bad object, not a Realm instance');\n    // Attempt to change an existing realmRec on a realm instance. Should not proceed.\n    assert(\n      !RealmRecForRealmInstance.has(realm),\n      'Realm instance already has a record'\n    );\n\n    RealmRecForRealmInstance.set(realm, realmRec);\n  }\n\n  // Initialize the global variables for the new Realm.\n  function setDefaultBindings(safeGlobal, safeEval, safeFunction) {\n    defineProperties(safeGlobal, {\n      eval: {\n        value: safeEval,\n        writable: true,\n        configurable: true\n      },\n      Function: {\n        value: safeFunction,\n        writable: true,\n        configurable: true\n      }\n    });\n  }\n\n  function createRealmRec(unsafeRec, transforms, sloppyGlobals) {\n    const { sharedGlobalDescs, unsafeGlobal } = unsafeRec;\n\n    const safeGlobal = create(unsafeGlobal.Object.prototype, sharedGlobalDescs);\n\n    const safeEvaluatorFactory = createSafeEvaluatorFactory(\n      unsafeRec,\n      safeGlobal,\n      transforms,\n      sloppyGlobals\n    );\n    const safeEval = createSafeEvaluator(safeEvaluatorFactory);\n    const safeEvalWhichTakesEndowments = createSafeEvaluatorWhichTakesEndowments(\n      safeEvaluatorFactory\n    );\n    const safeFunction = createFunctionEvaluator(unsafeRec, safeEval);\n\n    setDefaultBindings(safeGlobal, safeEval, safeFunction);\n\n    const realmRec = freeze({\n      safeGlobal,\n      safeEval,\n      safeEvalWhichTakesEndowments,\n      safeFunction\n    });\n\n    return realmRec;\n  }\n\n  /**\n   * A root realm uses a fresh set of new intrinics. Here we first create\n   * a new unsafe record, which inherits the shims. Then we proceed with\n   * the creation of the realm record, and we apply the shims.\n   */\n  function initRootRealm(parentUnsafeRec, self, options) {\n    // note: 'self' is the instance of the Realm.\n\n    // todo: investigate attacks via Array.species\n    // todo: this accepts newShims='string', but it should reject that\n    const { shims: newShims, transforms, sloppyGlobals, errorHandler } = options;\n    const allShims = arrayConcat(parentUnsafeRec.allShims, newShims);\n\n    // The unsafe record is created already repaired.\n    const unsafeRec = createNewUnsafeRec(allShims);\n\n    const { unsafeGlobal } = unsafeRec;\n    unsafeGlobal.addEventListener('error', err => {\n      if (errorHandler) errorHandler(err);\n    });\n\n    // eslint-disable-next-line no-use-before-define\n    const Realm = createRealmFacade(unsafeRec, BaseRealm);\n\n    // Add a Realm descriptor to sharedGlobalDescs, so it can be defined onto the\n    // safeGlobal like the rest of the globals.\n    unsafeRec.sharedGlobalDescs.Realm = {\n      value: Realm,\n      writable: true,\n      configurable: true\n    };\n\n    // Creating the realmRec provides the global object, eval() and Function()\n    // to the realm.\n    const realmRec = createRealmRec(unsafeRec, transforms, sloppyGlobals);\n\n    // Apply all shims in the new RootRealm. We don't do this for compartments.\n    const { safeEvalWhichTakesEndowments } = realmRec;\n    for (const shim of allShims) {\n      safeEvalWhichTakesEndowments(shim);\n    }\n\n    // The realmRec acts as a private field on the realm instance.\n    registerRealmRecForRealmInstance(self, realmRec);\n  }\n\n  /**\n   * A compartment shares the intrinsics of its root realm. Here, only a\n   * realmRec is necessary to hold the global object, eval() and Function().\n   */\n  function initCompartment(unsafeRec, self, options = {}) {\n    // note: 'self' is the instance of the Realm.\n\n    const { transforms, sloppyGlobals } = options;\n    const realmRec = createRealmRec(unsafeRec, transforms, sloppyGlobals);\n\n    // The realmRec acts as a private field on the realm instance.\n    registerRealmRecForRealmInstance(self, realmRec);\n  }\n\n  function getRealmGlobal(self) {\n    const { safeGlobal } = getRealmRecForRealmInstance(self);\n    return safeGlobal;\n  }\n\n  function realmEvaluate(self, x, endowments = {}, options = {}) {\n    // todo: don't pass in primal-realm objects like {}, for safety. OTOH its\n    // properties are copied onto the new global 'target'.\n    // todo: figure out a way to membrane away the contents to safety.\n    const { safeEvalWhichTakesEndowments } = getRealmRecForRealmInstance(self);\n    return safeEvalWhichTakesEndowments(x, endowments, options);\n  }\n\n  const BaseRealm = {\n    initRootRealm,\n    initCompartment,\n    getRealmGlobal,\n    realmEvaluate\n  };\n\n  // Create the current unsafeRec from the current \"primal\" environment (the realm\n  // where the Realm shim is loaded and executed).\n  const currentUnsafeRec = createCurrentUnsafeRec();\n\n  /**\n   * The \"primal\" realm class is defined in the current \"primal\" environment,\n   * and is part of the shim. There is no need to facade this class via evaluation\n   * because both share the same intrinsics.\n   */\n  const Realm = buildChildRealm(currentUnsafeRec, BaseRealm);\n\n  return Realm;\n\n}));\n//# sourceMappingURL=realms-shim.umd.js.map\n","var indexOf = function (xs, item) {\n    if (xs.indexOf) return xs.indexOf(item);\n    else for (var i = 0; i < xs.length; i++) {\n        if (xs[i] === item) return i;\n    }\n    return -1;\n};\nvar Object_keys = function (obj) {\n    if (Object.keys) return Object.keys(obj)\n    else {\n        var res = [];\n        for (var key in obj) res.push(key)\n        return res;\n    }\n};\n\nvar forEach = function (xs, fn) {\n    if (xs.forEach) return xs.forEach(fn)\n    else for (var i = 0; i < xs.length; i++) {\n        fn(xs[i], i, xs);\n    }\n};\n\nvar defineProp = (function() {\n    try {\n        Object.defineProperty({}, '_', {});\n        return function(obj, name, value) {\n            Object.defineProperty(obj, name, {\n                writable: true,\n                enumerable: false,\n                configurable: true,\n                value: value\n            })\n        };\n    } catch(e) {\n        return function(obj, name, value) {\n            obj[name] = value;\n        };\n    }\n}());\n\nvar globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',\n'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',\n'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',\n'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',\n'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];\n\nfunction Context() {}\nContext.prototype = {};\n\nvar Script = exports.Script = function NodeScript (code) {\n    if (!(this instanceof Script)) return new Script(code);\n    this.code = code;\n};\n\nScript.prototype.runInContext = function (context) {\n    if (!(context instanceof Context)) {\n        throw new TypeError(\"needs a 'context' argument.\");\n    }\n    \n    var iframe = document.createElement('iframe');\n    if (!iframe.style) iframe.style = {};\n    iframe.style.display = 'none';\n    \n    document.body.appendChild(iframe);\n    \n    var win = iframe.contentWindow;\n    var wEval = win.eval, wExecScript = win.execScript;\n\n    if (!wEval && wExecScript) {\n        // win.eval() magically appears when this is called in IE:\n        wExecScript.call(win, 'null');\n        wEval = win.eval;\n    }\n    \n    forEach(Object_keys(context), function (key) {\n        win[key] = context[key];\n    });\n    forEach(globals, function (key) {\n        if (context[key]) {\n            win[key] = context[key];\n        }\n    });\n    \n    var winKeys = Object_keys(win);\n\n    var res = wEval.call(win, this.code);\n    \n    forEach(Object_keys(win), function (key) {\n        // Avoid copying circular objects like `top` and `window` by only\n        // updating existing context properties or new properties in the `win`\n        // that was only introduced after the eval.\n        if (key in context || indexOf(winKeys, key) === -1) {\n            context[key] = win[key];\n        }\n    });\n\n    forEach(globals, function (key) {\n        if (!(key in context)) {\n            defineProp(context, key, win[key]);\n        }\n    });\n    \n    document.body.removeChild(iframe);\n    \n    return res;\n};\n\nScript.prototype.runInThisContext = function () {\n    return eval(this.code); // maybe...\n};\n\nScript.prototype.runInNewContext = function (context) {\n    var ctx = Script.createContext(context);\n    var res = this.runInContext(ctx);\n\n    if (context) {\n        forEach(Object_keys(ctx), function (key) {\n            context[key] = ctx[key];\n        });\n    }\n\n    return res;\n};\n\nforEach(Object_keys(Script.prototype), function (name) {\n    exports[name] = Script[name] = function (code) {\n        var s = Script(code);\n        return s[name].apply(s, [].slice.call(arguments, 1));\n    };\n});\n\nexports.isContext = function (context) {\n    return context instanceof Context;\n};\n\nexports.createScript = function (code) {\n    return exports.Script(code);\n};\n\nexports.createContext = Script.createContext = function (context) {\n    var copy = new Context();\n    if(typeof context === 'object') {\n        forEach(Object_keys(context), function (key) {\n            copy[key] = context[key];\n        });\n    }\n    return copy;\n};\n","const updaterSet = new Set();\nexport function addMicrotask(func) {\n    if (typeof func !== 'function')\n        return;\n    if (!updaterSet.size) {\n        // delayed execution callback after updating store\n        globalThis.queueMicrotask(() => {\n            updaterSet.forEach(func => func());\n            updaterSet.clear();\n        });\n    }\n    updaterSet.delete(func);\n    updaterSet.add(func);\n}\n/**\n * `EventTarget` safari not support\n * https://bugs.webkit.org/show_bug.cgi?id=174313\n */\nconst EventTarget = globalThis.Image || Object; // support nodejs\nexport class Pool extends EventTarget {\n    constructor() {\n        super();\n        this.currentId = 0;\n        this.count = 0;\n        this.pool = new Map();\n        // https://bugs.webkit.org/show_bug.cgi?id=198674\n        Object.setPrototypeOf(this, Pool.prototype);\n    }\n    add(item) {\n        if (!this.pool.size)\n            this.dispatchEvent(new CustomEvent('start'));\n        this.pool.set(this.count, item);\n        this.count += 1;\n    }\n    get() {\n        const item = this.pool.get(this.currentId);\n        if (item) {\n            this.pool.delete(this.currentId);\n            this.currentId += 1;\n            if (!this.pool.size)\n                this.dispatchEvent(new CustomEvent('end'));\n        }\n        return item;\n    }\n}\nexport class QueryString extends URLSearchParams {\n    constructor(param) {\n        if (param instanceof QueryString) {\n            return param;\n        }\n        super(param);\n        /**\n         * can't extend `URLSearchParams`\n         * https://bugs.webkit.org/show_bug.cgi?id=198674\n         */\n        Object.setPrototypeOf(this, QueryString.prototype);\n    }\n    concat(param) {\n        let query;\n        if (typeof param === 'string') {\n            query = Object.fromEntries(new URLSearchParams(param).entries());\n        }\n        else {\n            query = param;\n        }\n        Object.keys(query).forEach(key => {\n            this.append(key, query[key]);\n        });\n    }\n    toString() {\n        const string = super.toString();\n        return string ? `?${string}` : '';\n    }\n    toJSON() {\n        return this.toString();\n    }\n}\n// 写 html 文本\nexport function raw(arr, ...args) {\n    return arr.reduce((prev, current, index) => prev + (args[index - 1] || '') + current);\n}\n// 写 css 文本，在 CSSStyleSheet 中使用\nexport function css(arr, ...args) {\n    return raw(arr, ...args);\n}\nconst rulesWeakMap = new WeakMap();\n/**\n * !!! 目前只有 Chrome 支持\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1520690\n *\n * 创建 style sheet 用于 `adoptedStyleSheets`\n * @param rules string 不能动态更新的 css\n * @param mediaQuery string 媒体查询\n */\nexport function createCSSSheet(rules, mediaQuery = '') {\n    let cssSheet = rulesWeakMap.get(rules);\n    if (!cssSheet) {\n        const sheet = new CSSStyleSheet();\n        sheet.media.mediaText = mediaQuery;\n        let style = '';\n        if (typeof rules === 'string') {\n            style = rules;\n        }\n        else {\n            Object.keys(rules).forEach(key => {\n                sheet[key] = rules[key].type === 'tag' ? key : `${key}-${rules[key].key}`;\n                style += rules[key].str.replace(/&/g, sheet[key]);\n            });\n            rulesWeakMap.set(rules, sheet);\n        }\n        sheet.replaceSync(style);\n        cssSheet = sheet;\n    }\n    return cssSheet;\n}\nfunction randomStr(number = 5, origin = '0123456789abcdefghijklmnopqrstuvwxyz') {\n    const len = origin.length;\n    let str = '';\n    for (let i = 0; i < number; i++) {\n        str += origin[Math.floor(Math.random() * len)];\n    }\n    return str;\n}\n// 只支持一层嵌套\n// https://drafts.csswg.org/css-nesting-1/\nfunction flatStyled(style, type) {\n    const subStyle = [];\n    let str = `& {${style.replace(new RegExp('&.*{(.*)}', 'gs'), function (substr) {\n        subStyle.push(substr);\n        return '';\n    })}}` + subStyle.join('');\n    if (type !== 'tag')\n        str = str.replace(/&/g, type === 'class' ? '.&' : '#&');\n    return { str, key: randomStr(), type };\n}\n// 写 css 文本，在 CSSStyleSheet 中使用，使用 styed-components 高亮\n//\n// createCSSSheet({\n//   red: styled.class`\n//     background: red;\n//     &:hover {\n//       background: blue;\n//     }\n//   `,\n// });\nexport const styled = {\n    class: (arr, ...args) => {\n        const style = raw(arr, ...args);\n        return flatStyled(style, 'class');\n    },\n    id: (arr, ...args) => {\n        const style = raw(arr, ...args);\n        return flatStyled(style, 'id');\n    },\n    tag: (arr, ...args) => {\n        const style = raw(arr, ...args);\n        return flatStyled(style, 'tag');\n    },\n};\nexport function camelToKebabCase(str) {\n    return str.replace(/[A-Z]/g, ($1) => '-' + $1.toLowerCase());\n}\nexport function kebabToCamelCase(str) {\n    return str.replace(/-(.)/g, (_substr, $1) => $1.toUpperCase());\n}\nexport function cleanObject(o) {\n    Object.keys(o).forEach((key) => {\n        const k = key;\n        delete o[k];\n    });\n    return o;\n}\nexport class GemError extends Error {\n    constructor(msg) {\n        super(msg);\n        this.message = `gem: ${this.message}`;\n    }\n}\nexport function emptyFunction() {\n    // 用于占位的空函数\n}\n//# sourceMappingURL=utils.js.map","import { addMicrotask } from './utils';\n// 不使用符号，方便跨 Realms\nexport const HANDLES_KEY = 'gem@storeHandlesKey';\nexport function createStore(originStore) {\n    const store = originStore;\n    // 序列化时忽略\n    Object.defineProperty(store, HANDLES_KEY, { enumerable: false, value: new Set(), writable: true });\n    return store;\n}\nexport function createStoreSet(originStoreSet) {\n    const keys = Object.keys(originStoreSet);\n    keys.forEach(key => {\n        const store = originStoreSet[key];\n        createStore(store);\n    });\n    return originStoreSet;\n}\nexport function updateStore(store, value) {\n    Object.assign(store, value);\n    const listeners = store[HANDLES_KEY];\n    listeners.forEach(func => {\n        addMicrotask(func);\n    });\n}\nexport function connect(store, func) {\n    const listeners = store[HANDLES_KEY];\n    listeners.add(func);\n}\nexport function disconnect(store, func) {\n    const listeners = store[HANDLES_KEY];\n    listeners.delete(func);\n}\n//# sourceMappingURL=store.js.map","import { createStore, updateStore } from './store';\nimport { QueryString, cleanObject, GemError } from './utils';\nexport const history = window.history;\nconst location = window.location;\nconst pushState = history.pushState.bind(history);\nconst replaceState = history.replaceState.bind(history);\nlet key = 0;\nconst getKey = () => ++key;\nconst store = createStore({\n    $hasCloseHandle: false,\n    $hasOpenHandle: false,\n    $hasShouldCloseHandle: false,\n    $key: 0,\n});\n// TODO: WeakRef\nconst paramsMap = new Map();\nfunction validData(data) {\n    var _a, _b, _c, _d;\n    if ((_a = data) === null || _a === void 0 ? void 0 : _a.$key)\n        throw new GemError('`$key` is not allowed');\n    if ((_b = data) === null || _b === void 0 ? void 0 : _b.$hasCloseHandle)\n        throw new GemError('`$hasCloseHandle` is not allowed');\n    if ((_c = data) === null || _c === void 0 ? void 0 : _c.$hasOpenHandle)\n        throw new GemError('`$hasOpenHandle` is not allowed');\n    if ((_d = data) === null || _d === void 0 ? void 0 : _d.$hasShouldCloseHandle)\n        throw new GemError('`$hasShouldCloseHandle` is not allowed');\n}\n// 并非实际路径 `location.pathname`\nfunction getAbsolutePath(relativePath) {\n    if (history.basePath) {\n        return history.basePath + (relativePath === '/' ? '' : relativePath);\n    }\n    return relativePath;\n}\nfunction getRelativePath(realPath) {\n    return realPath.replace(new RegExp(`^${history.basePath}`), '');\n}\nfunction initParams(params) {\n    const current = paramsMap.get(store.$key) || {};\n    // 没提供 path 使用当前 path\n    const path = params.path || getRelativePath(location.pathname);\n    // 没提供 query 又没有提供 path 时使用当前 search\n    const query = new QueryString(params.query || (params.path ? '' : location.search));\n    const pathChanged = (params.path && params.path !== current.path) || (params.query && String(params.query) !== String(current.query));\n    const title = params.title || (pathChanged ? '' : document.title);\n    // 没提供 hash 又没有改变路径时使用当前 hash\n    const hash = params.hash || (pathChanged ? '' : decodeURIComponent(location.hash));\n    return Object.assign(Object.assign({}, params), { title, path, query, hash });\n}\nwindow.addEventListener('hashchange', ({ isTrusted }) => {\n    if (isTrusted) {\n        history.replace({ hash: decodeURIComponent(location.hash) });\n    }\n});\nfunction updateHistory(type, p) {\n    validData(p.data);\n    const params = initParams(p);\n    const { title, path, query, hash } = params;\n    const state = Object.assign({ $hasCloseHandle: !!params.close, $hasOpenHandle: !!params.open, $hasShouldCloseHandle: !!params.shouldClose, $key: getKey() }, (params.data || {}));\n    paramsMap.set(state.$key, params);\n    updateStore(cleanObject(store), state);\n    const url = getAbsolutePath(path) + new QueryString(query) + hash;\n    const prevHave = decodeURIComponent(location.hash);\n    (type === 'push' ? pushState : replaceState)(state, title, url);\n    if (prevHave !== hash)\n        window.dispatchEvent(new CustomEvent('hashchange'));\n}\n// 跨框架时，调用者对 basePath 无感知\nfunction updateHistoryByNative(type, data, title, originUrl) {\n    validData(data);\n    const state = Object.assign({ $key: getKey() }, (data || {}));\n    const { pathname, search, hash } = new URL(originUrl, location.origin);\n    const params = initParams({ path: pathname, query: new QueryString(search), hash, title, data });\n    paramsMap.set(state.$key, params);\n    updateStore(cleanObject(store), state);\n    const url = getAbsolutePath(pathname) + params.query + hash;\n    const prevHave = decodeURIComponent(location.hash);\n    (type === 'push' ? pushState : replaceState)(state, title, url);\n    if (prevHave !== hash)\n        window.dispatchEvent(new CustomEvent('hashchange'));\n}\nexport const basePathStore = createStore({\n    basePath: '',\n});\nif (!('basePath' in history)) {\n    // 不允许其他框架重写\n    // 保持原有功能\n    Object.defineProperties(history, {\n        basePath: {\n            get() {\n                return basePathStore.basePath;\n            },\n            set(v) {\n                if (!basePathStore.basePath) {\n                    // 应用初始化的时候设置\n                    updateStore(basePathStore, { basePath: v });\n                    // paramsMap 更新后 ui 才会更新\n                    Object.assign(paramsMap.get(store.$key), { path: getRelativePath(location.pathname) });\n                }\n                else {\n                    throw new GemError('已经有其他环境使用 gem , 会共享 history 对象，禁止再修改 history 对象');\n                }\n            },\n        },\n        getParams: {\n            value: function () {\n                return paramsMap.get(store.$key);\n            },\n        },\n        updateParams: {\n            value: function (params) {\n                Object.assign(paramsMap.get(store.$key), params);\n                updateStore(store, {});\n            },\n        },\n        store: {\n            value: store,\n        },\n        push: {\n            value: function (params) {\n                updateHistory('push', params);\n            },\n        },\n        pushIgnoreCloseHandle: {\n            value: function (params) {\n                var _a, _b, _c;\n                if (store.$hasCloseHandle) {\n                    (_c = (_a = paramsMap.get(store.$key)) === null || _a === void 0 ? void 0 : (_b = _a).close) === null || _c === void 0 ? void 0 : _c.call(_b);\n                    history.replace(params);\n                }\n                else {\n                    history.push(params);\n                }\n            },\n        },\n        replace: {\n            value: function (params) {\n                updateHistory('replace', params);\n            },\n        },\n        pushState: {\n            value: function (data, title, path) {\n                updateHistoryByNative('push', data, title, path);\n            },\n        },\n        replaceState: {\n            value: function (data, title, path) {\n                updateHistoryByNative('replace', data, title, path);\n            },\n        },\n    });\n    if (!history.state) {\n        // 初始化 historyItem\n        const { pathname, search, hash } = location;\n        history.replace({ path: pathname, query: search, hash });\n    }\n    else if (history.state.$hasCloseHandle) {\n        updateStore(store, history.state);\n        // 有 handle 返回键的页面刷新需要清除返回 handler\n        history.back();\n    }\n    else {\n        // 有 gem 历史的正常普通刷新, 储存 params\n        const params = initParams({ title: document.title });\n        updateStore(store, Object.assign({ $key: getKey() }, (history.state || {})));\n        paramsMap.set(store.$key, params);\n    }\n    /**\n     * 表示 popstate handler 中正在进行导航\n     */\n    let navigating = false;\n    window.addEventListener('popstate', event => {\n        var _a, _b, _c, _d, _e, _f;\n        const newState = event.state;\n        if (!((_a = newState) === null || _a === void 0 ? void 0 : _a.$key)) {\n            // 比如作为其他 app 的宿主 app\n            return;\n        }\n        if (navigating) {\n            navigating = false;\n            return;\n        }\n        // 处理 forward or back\n        // replace 不会触发\n        // 刷新后再导航需要从当前 state 中构建 params\n        // 理论上该条历史记录中不会出现事件处理器\n        if (!paramsMap.has(newState.$key)) {\n            const { pathname, search, hash } = location;\n            paramsMap.set(newState.$key, {\n                path: pathname,\n                query: new QueryString(search),\n                hash,\n                title: document.title,\n                data: newState,\n            });\n        }\n        // url 变化前 historyItem\n        const prevState = store;\n        if (newState.$key > prevState.$key && newState.$hasOpenHandle) {\n            // 返回键关闭的 modal 能前进键重新打开\n            // 刷新后不能工作：刷新后 historyItem 中只有 url\n            (_d = (_b = paramsMap.get(newState.$key)) === null || _b === void 0 ? void 0 : (_c = _b).open) === null || _d === void 0 ? void 0 : _d.call(_c);\n        }\n        else if (prevState.$hasCloseHandle) {\n            const prevParams = paramsMap.get(prevState.$key);\n            const closeHandle = (_e = prevParams) === null || _e === void 0 ? void 0 : _e.close;\n            const shouldCloseHandle = (_f = prevParams) === null || _f === void 0 ? void 0 : _f.shouldClose;\n            const notAllowClose = shouldCloseHandle && !shouldCloseHandle();\n            if (notAllowClose) {\n                navigating = true;\n                history.forward(); // 将重新触发 popstate\n                return; // 历史记录栈位置没有变化，不需要后面的 updateStore\n            }\n            else {\n                // handle 返回键\n                if (closeHandle) {\n                    closeHandle();\n                }\n                else if (newState.$hasCloseHandle) {\n                    // 有 modal 的页面刷新会执行 back 触发 popstate\n                    // 如果是二级 modal 页面刷新\n                    // 则还需要进行一次 back\n                    // !!! 不完美：三级 modal 页面刷新不支持返回到初始页面\n                    navigating = true;\n                    history.back();\n                }\n            }\n        }\n        updateStore(cleanObject(store), newState);\n    });\n}\n//# sourceMappingURL=history.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment poisition.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceeding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceeding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // tslint:disable-next-line:no-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { createMarker, directive, NodePart, removeNodes, reparentNodes } from '../lit-html.js';\n// Helper functions for manipulating parts\n// TODO(kschaaf): Refactor into Part API?\nconst createAndInsertPart = (containerPart, beforePart) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = beforePart === undefined ? containerPart.endNode :\n        beforePart.startNode;\n    const startNode = container.insertBefore(createMarker(), beforeNode);\n    container.insertBefore(createMarker(), beforeNode);\n    const newPart = new NodePart(containerPart.options);\n    newPart.insertAfterNode(startNode);\n    return newPart;\n};\nconst updatePart = (part, value) => {\n    part.setValue(value);\n    part.commit();\n    return part;\n};\nconst insertPartBefore = (containerPart, part, ref) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = ref ? ref.startNode : containerPart.endNode;\n    const endNode = part.endNode.nextSibling;\n    if (endNode !== beforeNode) {\n        reparentNodes(container, part.startNode, endNode, beforeNode);\n    }\n};\nconst removePart = (part) => {\n    removeNodes(part.startNode.parentNode, part.startNode, part.endNode.nextSibling);\n};\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list, start, end) => {\n    const map = new Map();\n    for (let i = start; i <= end; i++) {\n        map.set(list[i], i);\n    }\n    return map;\n};\n// Stores previous ordered list of parts and map of key to index\nconst partListCache = new WeakMap();\nconst keyListCache = new WeakMap();\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * amd removals.\n *\n * IMPORTANT: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat = directive((items, keyFnOrTemplate, template) => {\n    let keyFn;\n    if (template === undefined) {\n        template = keyFnOrTemplate;\n    }\n    else if (keyFnOrTemplate !== undefined) {\n        keyFn = keyFnOrTemplate;\n    }\n    return (containerPart) => {\n        if (!(containerPart instanceof NodePart)) {\n            throw new Error('repeat can only be used in text bindings');\n        }\n        // Old part & key lists are retrieved from the last update\n        // (associated with the part for this instance of the directive)\n        const oldParts = partListCache.get(containerPart) || [];\n        const oldKeys = keyListCache.get(containerPart) || [];\n        // New part list will be built up as we go (either reused from\n        // old parts or created for new keys in this update). This is\n        // saved in the above cache at the end of the update.\n        const newParts = [];\n        // New value list is eagerly generated from items along with a\n        // parallel array indicating its key.\n        const newValues = [];\n        const newKeys = [];\n        let index = 0;\n        for (const item of items) {\n            newKeys[index] = keyFn ? keyFn(item, index) : index;\n            newValues[index] = template(item, index);\n            index++;\n        }\n        // Maps from key to index for current and previous update; these\n        // are generated lazily only when needed as a performance\n        // optimization, since they are only required for multiple\n        // non-contiguous changes in the list, which are less common.\n        let newKeyToIndexMap;\n        let oldKeyToIndexMap;\n        // Head and tail pointers to old parts and new values\n        let oldHead = 0;\n        let oldTail = oldParts.length - 1;\n        let newHead = 0;\n        let newTail = newValues.length - 1;\n        // Overview of O(n) reconciliation algorithm (general approach\n        // based on ideas found in ivi, vue, snabbdom, etc.):\n        //\n        // * We start with the list of old parts and new values (and\n        //   arrays of their respective keys), head/tail pointers into\n        //   each, and we build up the new list of parts by updating\n        //   (and when needed, moving) old parts or creating new ones.\n        //   The initial scenario might look like this (for brevity of\n        //   the diagrams, the numbers in the array reflect keys\n        //   associated with the old parts or new values, although keys\n        //   and parts/values are actually stored in parallel arrays\n        //   indexed using the same head/tail pointers):\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n        //                                      item order\n        //      newHead ^                 ^ newTail\n        //\n        // * Iterate old & new lists from both sides, updating,\n        //   swapping, or removing parts at the head/tail locations\n        //   until neither head nor tail can move.\n        //\n        // * Example below: keys at head pointers match, so update old\n        //   part 0 in-place (no need to move it) and record part 0 in\n        //   the `newParts` list. The last thing we do is advance the\n        //   `oldHead` and `newHead` pointers (will be reflected in the\n        //   next diagram).\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //      newHead ^                 ^ newTail\n        //\n        // * Example below: head pointers don't match, but tail\n        //   pointers do, so update part 6 in place (no need to move\n        //   it), and record part 6 in the `newParts` list. Last,\n        //   advance the `oldTail` and `oldHead` pointers.\n        //\n        //         oldHead v              v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n        //                                      & newTail\n        //         newHead ^              ^ newTail\n        //\n        // * If neither head nor tail match; next check if one of the\n        //   old head/tail items was removed. We first need to generate\n        //   the reverse map of new keys to index (`newKeyToIndexMap`),\n        //   which is done once lazily as a performance optimization,\n        //   since we only hit this case if multiple non-contiguous\n        //   changes were made. Note that for contiguous removal\n        //   anywhere in the list, the head and tails would advance\n        //   from either end and pass each other before we get to this\n        //   case and removals would be handled in the final while loop\n        //   without needing to generate the map.\n        //\n        // * Example below: The key at `oldTail` was removed (no longer\n        //   in the `newKeyToIndexMap`), so remove that part from the\n        //   DOM and advance just the `oldTail` pointer.\n        //\n        //         oldHead v           v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n        //         newHead ^           ^ newTail\n        //\n        // * Once head and tail cannot move, any mismatches are due to\n        //   either new or moved items; if a new key is in the previous\n        //   \"old key to old index\" map, move the old part to the new\n        //   location, otherwise create and insert a new part. Note\n        //   that when moving an old part we null its position in the\n        //   oldParts array if it lies between the head and tail so we\n        //   know to skip it when the pointers get there.\n        //\n        // * Example below: neither head nor tail match, and neither\n        //   were removed; so find the `newHead` key in the\n        //   `oldKeyToIndexMap`, and move that old part's DOM into the\n        //   next head position (before `oldParts[oldHead]`). Last,\n        //   null the part in the `oldPart` array since it was\n        //   somewhere in the remaining oldParts still to be scanned\n        //   (between the head and tail pointers) so that we know to\n        //   skip that old part on future iterations.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n        //                                      newHead\n        //         newHead ^           ^ newTail\n        //\n        // * Note that for moves/insertions like the one above, a part\n        //   inserted at the head pointer is inserted before the\n        //   current `oldParts[oldHead]`, and a part inserted at the\n        //   tail pointer is inserted before `newParts[newTail+1]`. The\n        //   seeming asymmetry lies in the fact that new parts are\n        //   moved into place outside in, so to the right of the head\n        //   pointer are old parts, and to the right of the tail\n        //   pointer are new parts.\n        //\n        // * We always restart back from the top of the algorithm,\n        //   allowing matching and simple updates in place to\n        //   continue...\n        //\n        // * Example below: the head pointers once again match, so\n        //   simply update part 1 and record it in the `newParts`\n        //   array.  Last, advance both head pointers.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //            newHead ^        ^ newTail\n        //\n        // * As mentioned above, items that were moved as a result of\n        //   being stuck (the final else clause in the code below) are\n        //   marked with null, so we always advance old pointers over\n        //   these so we're comparing the next actual old value on\n        //   either end.\n        //\n        // * Example below: `oldHead` is null (already placed in\n        //   newParts), so advance `oldHead`.\n        //\n        //            oldHead v     v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n        //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //               newHead ^     ^ newTail\n        //\n        // * Note it's not critical to mark old parts as null when they\n        //   are moved from head to tail or tail to head, since they\n        //   will be outside the pointer range and never visited again.\n        //\n        // * Example below: Here the old tail key matches the new head\n        //   key, so the part at the `oldTail` position and move its\n        //   DOM to the new head position (before `oldParts[oldHead]`).\n        //   Last, advance `oldTail` and `newHead` pointers.\n        //\n        //               oldHead v  v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n        //                                     advance oldTail & newHead\n        //               newHead ^     ^ newTail\n        //\n        // * Example below: Old and new head keys match, so update the\n        //   old head part in place, and advance the `oldHead` and\n        //   `newHead` pointers.\n        //\n        //               oldHead v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n        //                                      newHead\n        //                  newHead ^  ^ newTail\n        //\n        // * Once the new or old pointers move past each other then all\n        //   we have left is additions (if old list exhausted) or\n        //   removals (if new list exhausted). Those are handled in the\n        //   final while loops at the end.\n        //\n        // * Example below: `oldHead` exceeded `oldTail`, so we're done\n        //   with the main loop.  Create the remaining part and insert\n        //   it at the new head position, and the update is complete.\n        //\n        //                   (oldHead > oldTail)\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //                     newHead ^ newTail\n        //\n        // * Note that the order of the if/else clauses is not\n        //   important to the algorithm, as long as the null checks\n        //   come first (to ensure we're always working on valid old\n        //   parts) and that the final else clause comes last (since\n        //   that's where the expensive moves occur). The order of\n        //   remaining clauses is is just a simple guess at which cases\n        //   will be most common.\n        //\n        // * TODO(kschaaf) Note, we could calculate the longest\n        //   increasing subsequence (LIS) of old items in new position,\n        //   and only move those not in the LIS set. However that costs\n        //   O(nlogn) time and adds a bit more code, and only helps\n        //   make rare types of mutations require fewer moves. The\n        //   above handles removes, adds, reversal, swaps, and single\n        //   moves of contiguous items in linear time, in the minimum\n        //   number of moves. As the number of multiple moves where LIS\n        //   might help approaches a random shuffle, the LIS\n        //   optimization becomes less helpful, so it seems not worth\n        //   the code at this point. Could reconsider if a compelling\n        //   case arises.\n        while (oldHead <= oldTail && newHead <= newTail) {\n            if (oldParts[oldHead] === null) {\n                // `null` means old part at head has already been used\n                // below; skip\n                oldHead++;\n            }\n            else if (oldParts[oldTail] === null) {\n                // `null` means old part at tail has already been used\n                // below; skip\n                oldTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newHead]) {\n                // Old head matches new head; update in place\n                newParts[newHead] =\n                    updatePart(oldParts[oldHead], newValues[newHead]);\n                oldHead++;\n                newHead++;\n            }\n            else if (oldKeys[oldTail] === newKeys[newTail]) {\n                // Old tail matches new tail; update in place\n                newParts[newTail] =\n                    updatePart(oldParts[oldTail], newValues[newTail]);\n                oldTail--;\n                newTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newTail]) {\n                // Old head matches new tail; update and move to new tail\n                newParts[newTail] =\n                    updatePart(oldParts[oldHead], newValues[newTail]);\n                insertPartBefore(containerPart, oldParts[oldHead], newParts[newTail + 1]);\n                oldHead++;\n                newTail--;\n            }\n            else if (oldKeys[oldTail] === newKeys[newHead]) {\n                // Old tail matches new head; update and move to new head\n                newParts[newHead] =\n                    updatePart(oldParts[oldTail], newValues[newHead]);\n                insertPartBefore(containerPart, oldParts[oldTail], oldParts[oldHead]);\n                oldTail--;\n                newHead++;\n            }\n            else {\n                if (newKeyToIndexMap === undefined) {\n                    // Lazily generate key-to-index maps, used for removals &\n                    // moves below\n                    newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n                    oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n                }\n                if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n                    // Old head is no longer in new list; remove\n                    removePart(oldParts[oldHead]);\n                    oldHead++;\n                }\n                else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n                    // Old tail is no longer in new list; remove\n                    removePart(oldParts[oldTail]);\n                    oldTail--;\n                }\n                else {\n                    // Any mismatches at this point are due to additions or\n                    // moves; see if we have an old part we can reuse and move\n                    // into place\n                    const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n                    const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n                    if (oldPart === null) {\n                        // No old part for this value; create a new one and\n                        // insert it\n                        const newPart = createAndInsertPart(containerPart, oldParts[oldHead]);\n                        updatePart(newPart, newValues[newHead]);\n                        newParts[newHead] = newPart;\n                    }\n                    else {\n                        // Reuse old part\n                        newParts[newHead] =\n                            updatePart(oldPart, newValues[newHead]);\n                        insertPartBefore(containerPart, oldPart, oldParts[oldHead]);\n                        // This marks the old part as having been used, so that\n                        // it will be skipped in the first two checks above\n                        oldParts[oldIndex] = null;\n                    }\n                    newHead++;\n                }\n            }\n        }\n        // Add parts for any remaining new values\n        while (newHead <= newTail) {\n            // For all remaining additions, we insert before last new\n            // tail, since old pointers are no longer valid\n            const newPart = createAndInsertPart(containerPart, newParts[newTail + 1]);\n            updatePart(newPart, newValues[newHead]);\n            newParts[newHead++] = newPart;\n        }\n        // Remove any remaining unused old parts\n        while (oldHead <= oldTail) {\n            const oldPart = oldParts[oldHead++];\n            if (oldPart !== null) {\n                removePart(oldPart);\n            }\n        }\n        // Save order of new parts for next round\n        partListCache.set(containerPart, newParts);\n        keyListCache.set(containerPart, newKeys);\n    };\n});\n//# sourceMappingURL=repeat.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { directive } from '../lit-html.js';\nconst previousValues = new WeakMap();\n/**\n * Prevents re-render of a template function until a single value or an array of\n * values changes.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([user.id, company.id], () => html`...`)}\n *   </div>\n * ```\n *\n * In this case, the template only renders if either `user.id` or `company.id`\n * changes.\n *\n * guard() is useful with immutable data patterns, by preventing expensive work\n * until data updates.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([immutableItems], () => immutableItems.map(i => html`${i}`))}\n *   </div>\n * ```\n *\n * In this case, items are mapped over only when the array reference changes.\n *\n * @param value the value to check before re-rendering\n * @param f the template function\n */\nexport const guard = directive((value, f) => (part) => {\n    const previousValue = previousValues.get(part);\n    if (Array.isArray(value)) {\n        // Dirty-check arrays by item\n        if (Array.isArray(previousValue) &&\n            previousValue.length === value.length &&\n            value.every((v, i) => v === previousValue[i])) {\n            return;\n        }\n    }\n    else if (previousValue === value &&\n        (value !== undefined || previousValues.has(part))) {\n        // Dirty-check non-arrays by identity\n        return;\n    }\n    part.setValue(f());\n    // Copy the value if it's an array so that if it's mutated we don't forget\n    // what the previous values were.\n    previousValues.set(part, Array.isArray(value) ? Array.from(value) : value);\n});\n//# sourceMappingURL=guard.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, directive } from '../lit-html.js';\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nexport const ifDefined = directive((value) => (part) => {\n    if (value === undefined && part instanceof AttributePart) {\n        if (value !== part.value) {\n            const name = part.committer.name;\n            part.committer.element.removeAttribute(name);\n        }\n    }\n    else {\n        part.setValue(value);\n    }\n});\n//# sourceMappingURL=if-defined.js.map","/* eslint-disable @typescript-eslint/no-empty-function */\nimport * as lit from 'lit-html';\nimport { TemplateResult } from 'lit-html';\nimport { connect, disconnect, HANDLES_KEY } from './store';\nimport { Pool, addMicrotask, kebabToCamelCase, emptyFunction } from './utils';\nimport { repeat as litRepeat } from 'lit-html/directives/repeat';\nimport { guard as litGuard } from 'lit-html/directives/guard';\nimport { ifDefined as litIfDefined } from 'lit-html/directives/if-defined';\nlet litHtml = {\n    html: lit.html,\n    svg: lit.svg,\n    render: lit.render,\n    directive: lit.directive,\n    repeat: litRepeat,\n    guard: litGuard,\n    ifDefined: litIfDefined,\n};\nif (window.__litHtml) {\n    // 自定义元素不能重复定义\n    // 所以嵌套 gem app 中导出的自定义元素类可能是之前定义的类\n    // 可能造成使用的 html 对象不是同一个\n    // map, 缓存之类的会变得不同\n    // 所以需要把他们放在全局对象中\n    litHtml = window.__litHtml;\n}\nelse {\n    window.__litHtml = litHtml;\n}\nconst { html, svg, render, directive, repeat, guard, ifDefined } = litHtml;\nexport { html, svg, render, directive, repeat, guard, ifDefined, TemplateResult };\n// final 字段如果使用 symbol 或者 private 将导致 modal-base 生成匿名子类 declaration 失败\n/**\n * @attr ref\n */\nexport class BaseElement extends HTMLElement {\n    constructor(shadow = true) {\n        super();\n        this.setState = this.setState.bind(this);\n        this.willMount = this.willMount.bind(this);\n        this.render = this.render.bind(this);\n        this.mounted = this.mounted.bind(this);\n        this.shouldUpdate = this.shouldUpdate.bind(this);\n        this.__update = this.__update.bind(this);\n        this.updated = this.updated.bind(this);\n        this.attributeChanged = this.attributeChanged.bind(this);\n        this.propertyChanged = this.propertyChanged.bind(this);\n        this.unmounted = this.unmounted.bind(this);\n        this.__renderRoot = shadow ? this.attachShadow({ mode: 'open' }) : this;\n        const { observedAttributes, observedPropertys, defineEvents, observedStores, adoptedStyleSheets } = new.target;\n        if (observedAttributes) {\n            observedAttributes.forEach(attr => {\n                const prop = kebabToCamelCase(attr);\n                // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                // @ts-ignore\n                if (typeof this[prop] === 'function') {\n                    throw `Don't use attribute with the same name as native methods`;\n                }\n                // Native attribute，no need difine property\n                // e.g: `id`, `title`, `hidden`, `alt`, `lang`\n                // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                // @ts-ignore\n                if (this[prop] !== undefined)\n                    return;\n                // !!! Custom property shortcut access only supports `string` type\n                Object.defineProperty(this, prop, {\n                    configurable: true,\n                    get() {\n                        // Return empty string if attribute does not exist\n                        return this.getAttribute(attr) || '';\n                    },\n                    set(v) {\n                        if (v === null) {\n                            this.removeAttribute(attr);\n                        }\n                        else {\n                            this.setAttribute(attr, v);\n                        }\n                    },\n                });\n            });\n        }\n        if (observedPropertys) {\n            observedPropertys.forEach(prop => {\n                this.__connectProperty(prop, false);\n            });\n        }\n        if (defineEvents) {\n            defineEvents.forEach(event => {\n                this.__connectProperty(event, true);\n                // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                // @ts-ignore\n                this[event] = emptyFunction;\n            });\n        }\n        if (observedStores) {\n            observedStores.forEach(store => {\n                if (!store[HANDLES_KEY]) {\n                    throw new Error('`observedStores` only support store module');\n                }\n                connect(store, this.__update);\n            });\n        }\n        if (adoptedStyleSheets) {\n            if (this.shadowRoot) {\n                this.shadowRoot.adoptedStyleSheets = adoptedStyleSheets;\n            }\n            else {\n                document.adoptedStyleSheets = document.adoptedStyleSheets.concat(adoptedStyleSheets);\n            }\n        }\n    }\n    /**@final */\n    get internals() {\n        if (!this.__internals) {\n            this.__internals = this.attachInternals();\n        }\n        return this.__internals;\n    }\n    /**\n     * @final\n     * 和 `attr` 不一样，只有等 `lit-html` 在已经初始化的元素上设置 `prop` 后才能访问\n     * 所以能在类字段中直接访问 `attr` 而不能访问 `prop`\n     * @example\n     * class TempGem extends GemElement {\n     *   static observedPropertys = ['prop'];\n     *   test = expect(this.prop).to.equal(undefined);\n     * }\n     * // <temp-gem .prop=${{a: 1}}></temp-gem>\n     * */\n    __connectProperty(prop, isEventHandle = false) {\n        if (prop in this)\n            return;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        let propValue = this[prop];\n        Object.defineProperty(this, prop, {\n            configurable: true,\n            get() {\n                return propValue;\n            },\n            set(v) {\n                if (v !== propValue) {\n                    if (isEventHandle) {\n                        if (v.isEventHandle)\n                            throw `Don't assign a wrapped event handler`;\n                        propValue = (detail) => {\n                            const evt = new CustomEvent(prop.toLowerCase(), { detail });\n                            this.dispatchEvent(evt);\n                            v(evt);\n                        };\n                        propValue.isEventHandle = true;\n                    }\n                    else {\n                        propValue = v;\n                    }\n                    if (this.__isMounted) {\n                        this.propertyChanged(prop, propValue, v);\n                        addMicrotask(this.__update);\n                    }\n                }\n            },\n        });\n    }\n    /**@final */\n    setState(payload) {\n        if (!this.state)\n            throw new Error('`state` not initialized');\n        Object.assign(this.state, payload);\n        addMicrotask(this.__update);\n    }\n    /**@lifecycle */\n    willMount() { }\n    /**@lifecycle */\n    render() {\n        return html `\n      <slot></slot>\n    `;\n    }\n    /**@lifecycle */\n    mounted() { }\n    /**@lifecycle */\n    shouldUpdate() {\n        return true;\n    }\n    /**@final */\n    __update() {\n        if (this.__isMounted && this.shouldUpdate()) {\n            render(this.render(), this.__renderRoot);\n            addMicrotask(this.updated);\n        }\n    }\n    /**@helper */\n    update() {\n        this.__update();\n    }\n    /**@lifecycle */\n    updated() { }\n    // 同步触发\n    /**@lifecycle */\n    propertyChanged(_name, _oldValue, _newValue) { }\n    // 同步触发\n    /**@lifecycle */\n    attributeChanged(_name, _oldValue, _newValue) { }\n    /**@lifecycle */\n    unmounted() { }\n    /**@private */\n    /**@final */\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (this.__isMounted) {\n            this.attributeChanged(name, oldValue, newValue);\n            addMicrotask(this.__update);\n        }\n    }\n    /**@final */\n    __connectedCallback() {\n        render(this.render(), this.__renderRoot);\n        const callback = this.mounted();\n        if (typeof callback === 'function')\n            this.__unmountCallback = callback;\n        this.__isMounted = true;\n    }\n    /**@private */\n    /**@final */\n    // adoptedCallback() {}\n    /**@private */\n    /**@final */\n    disconnectedCallback() {\n        var _a, _b;\n        const constructor = this.constructor;\n        if (constructor.observedStores) {\n            constructor.observedStores.forEach(store => {\n                disconnect(store, this.__update);\n            });\n        }\n        (_b = (_a = this).__unmountCallback) === null || _b === void 0 ? void 0 : _b.call(_a);\n        this.unmounted();\n        this.__isMounted = false;\n    }\n}\nexport class GemElement extends BaseElement {\n    /**@private */\n    /**@final */\n    connectedCallback() {\n        this.willMount();\n        this.__connectedCallback();\n    }\n}\n// global render task pool\nconst renderTaskPool = new Pool();\nlet loop = false;\nconst tick = () => {\n    window.requestAnimationFrame(function callback(timestamp) {\n        const task = renderTaskPool.get();\n        if (task) {\n            task();\n            if (performance.now() - timestamp < 16) {\n                callback(timestamp);\n                return;\n            }\n        }\n        // `renderTaskPool` not empty\n        if (loop) {\n            tick();\n        }\n    });\n};\nrenderTaskPool.addEventListener('start', () => {\n    loop = true;\n    tick();\n});\nrenderTaskPool.addEventListener('end', () => (loop = false));\nexport class AsyncGemElement extends BaseElement {\n    /**@final */\n    __update() {\n        renderTaskPool.add(() => {\n            if (this.shouldUpdate()) {\n                render(this.render(), this.__renderRoot);\n                this.updated();\n            }\n        });\n    }\n    /**@private */\n    /**@final */\n    connectedCallback() {\n        this.willMount();\n        renderTaskPool.add(() => {\n            this.__connectedCallback();\n        });\n    }\n}\n// 重写了全局 customElements\n// 原因是方便多个独立 app 同时使用 gem\n// 用户使用和 gem 同名的元素不会生效也不会报错\nconst define = customElements.define.bind(customElements);\ncustomElements.define = function (tagName, Class, options) {\n    if (!customElements.get(tagName)) {\n        define(tagName, Class, options);\n    }\n};\n//# sourceMappingURL=element.js.map","/**\n * target 并非元素，而是类的原型对象\n * 不能在 target 上使用 DOM API\n * 类定义之后立即执行，自定义元素可以在实例化时覆盖原型对象上的属性\n */\nimport { camelToKebabCase } from './utils';\nexport function refobject(target, prop) {\n    const attr = prop;\n    const ref = { ref: attr, element: null };\n    Object.defineProperty(target, prop, {\n        get() {\n            const that = this;\n            const ele = that.shadowRoot || that;\n            ref.element = ele.querySelector(`[ref=${prop}]`);\n            return ref;\n        },\n    });\n}\nexport function attribute(target, prop) {\n    const con = target.constructor;\n    if (!con.observedAttributes)\n        con.observedAttributes = [];\n    con.observedAttributes.push(camelToKebabCase(prop));\n}\nexport function property(target, prop) {\n    const con = target.constructor;\n    if (!con.observedPropertys)\n        con.observedPropertys = [];\n    con.observedPropertys.push(prop);\n}\nexport function state(target, prop) {\n    Object.defineProperty(target, prop, {\n        get() {\n            var _a, _b;\n            const that = this;\n            return !!((_b = (_a = that.internals) === null || _a === void 0 ? void 0 : _a.states) === null || _b === void 0 ? void 0 : _b.contains(prop));\n        },\n        set(v) {\n            const that = this;\n            const internals = that.internals;\n            if (!internals.states) {\n                // 不支持 css states 时使用 classList\n                internals.states = that.classList;\n            }\n            if (v) {\n                internals.states.add(prop);\n            }\n            else {\n                internals.states.remove(prop);\n            }\n        },\n    });\n}\nexport function slot(target, prop) {\n    const proto = target;\n    proto[prop] = prop;\n}\nexport function part(target, prop) {\n    const proto = target;\n    proto[prop] = prop;\n}\nexport function emitter(target, event) {\n    const con = target.constructor;\n    if (!con.defineEvents)\n        con.defineEvents = [];\n    con.defineEvents.push(event);\n}\nexport function adoptedStyle(style) {\n    return function (cls) {\n        const c = cls;\n        if (!c.adoptedStyleSheets)\n            c.adoptedStyleSheets = [];\n        c.adoptedStyleSheets.push(style);\n    };\n}\nexport function connectStore(store) {\n    // 这里的签名该怎么写？\n    return function (cls) {\n        const c = cls;\n        if (!c.observedStores)\n            c.observedStores = [];\n        c.observedStores.push(store);\n    };\n}\nexport function customElement(name) {\n    return function (cls) {\n        customElements.define(name, cls);\n    };\n}\n//# sourceMappingURL=decorators.js.map","export * from './lib/store';\nexport * from './lib/history';\nexport * from './lib/element';\nexport * from './lib/decorators';\nexport * from './lib/utils';\n//# sourceMappingURL=index.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Route_1;\nimport { html, GemElement, customElement, connectStore, property, emitter, history, } from '../';\nclass ParamsRegExp extends RegExp {\n    constructor(pattern) {\n        const namePosition = {};\n        let i = 0;\n        super(`^${pattern\n            .replace(/:([^/$]+)/g, (_m, name) => {\n            namePosition[name] = i++;\n            return `([^/]+)`;\n        })\n            .replace('*', '.*')}$`);\n        this.namePosition = namePosition;\n    }\n}\nfunction getReg(pattern) {\n    return new ParamsRegExp(pattern);\n}\n// `/a/b/:c/:d` `/a/b/1/2`\nfunction getParams(pattern, path) {\n    const reg = getReg(pattern);\n    const matchResult = path.match(reg);\n    if (matchResult) {\n        const params = {};\n        Object.keys(reg.namePosition).forEach(name => {\n            params[name] = matchResult[reg.namePosition[name] + 1];\n        });\n        return params;\n    }\n}\nexport function isMatch(pattern, path) {\n    return !!path.match(getReg(pattern));\n}\n// 从路由创建路径\n// 不包含 basePath\nexport function createPath(route, options) {\n    let path = route.pattern;\n    if (options && options.params) {\n        Object.keys(options.params).forEach(param => {\n            path = path.replace(new RegExp(`:${param}`, 'g'), options.params[param]);\n        });\n    }\n    return path;\n}\nexport function createHistoryParams(route, options) {\n    const path = createPath(route, options);\n    return Object.assign({ path }, options);\n}\n/**\n * @customElement gem-route\n * @fires change\n */\nlet Route = Route_1 = class Route extends GemElement {\n    constructor() {\n        super();\n        const { path, query } = history.getParams();\n        const href = path + query;\n        this._href = href;\n    }\n    // 获取当前匹配的路由的 params\n    static getParams() {\n        if (Route_1.currentRoute) {\n            return getParams(Route_1.currentRoute.pattern, history.getParams().path);\n        }\n    }\n    initPage() {\n        // 路径更新后可能发起第二次更新，更新 `document.title`\n        if (Route_1.currentRoute && Route_1.currentRoute.title && Route_1.currentRoute.title !== history.getParams().title) {\n            history.updateParams({ title: Route_1.currentRoute.title });\n        }\n    }\n    shouldUpdate() {\n        const { path, query } = history.getParams();\n        const href = path + query;\n        if (href !== this._href) {\n            this._href = href;\n            return true;\n        }\n        return false;\n    }\n    mounted() {\n        this.initPage();\n    }\n    updated() {\n        this.initPage();\n        this.change(Route_1.currentRoute);\n    }\n    render() {\n        if (!this.routes)\n            return this.callback();\n        Route_1.currentRoute = null;\n        let defaultRoute = null;\n        let routes;\n        if (this.routes instanceof Array) {\n            routes = this.routes;\n        }\n        else {\n            routes = Object.values(this.routes);\n        }\n        for (const item of routes) {\n            const { pattern } = item;\n            if ('*' === pattern) {\n                defaultRoute = item;\n            }\n            else if (isMatch(pattern, history.getParams().path)) {\n                Route_1.currentRoute = item;\n                break;\n            }\n        }\n        if (!Route_1.currentRoute) {\n            Route_1.currentRoute = defaultRoute;\n        }\n        if (!Route_1.currentRoute)\n            return this.callback();\n        if (Route_1.currentRoute.redirect) {\n            history.replace({ path: Route_1.currentRoute.redirect });\n            return this.callback();\n        }\n        return html `\n      <style>\n        :host {\n          display: contents;\n        }\n      </style>\n      ${Route_1.currentRoute.content}\n    `;\n    }\n    callback() {\n        Route_1.currentRoute = null;\n        return html ``;\n    }\n};\n__decorate([\n    property\n], Route.prototype, \"routes\", void 0);\n__decorate([\n    emitter\n], Route.prototype, \"change\", void 0);\nRoute = Route_1 = __decorate([\n    connectStore(history.store),\n    customElement('gem-route')\n], Route);\nexport { Route };\n//# sourceMappingURL=route.js.map","import { GemElement, html } from '@mantou/gem';\n\nclass Header extends GemElement {\n  render() {\n    return html`\n      <style>\n        :host {\n          background: black;\n          color: white;\n          grid-row: 1/2;\n          grid-column: 1/3;\n          display: flex;\n        }\n        .logo {\n          font-size: 48px;\n          font-weight: bold;\n          font-family: Arial, Helvetica, sans-serif;\n          padding: 0 24px;\n        }\n      </style>\n      <div class=\"logo\">LOGO</div>\n    `;\n  }\n}\ncustomElements.define('app-header', Header);\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { html, GemElement, history, connectStore, customElement } from '..';\n/**\n * @customElement gem-title\n */\nlet Title = class Title extends GemElement {\n    static setTitle(title) {\n        // 触发组件更新\n        history.updateParams({ title });\n    }\n    constructor(isHidden) {\n        super();\n        this.hidden = isHidden;\n    }\n    render() {\n        const { title } = history.getParams();\n        document.title = title || this.textContent || '';\n        if (this.hidden) {\n            return html ``;\n        }\n        if (!document.title) {\n            return html `\n        <slot></slot>\n      `;\n        }\n        return html `\n      ${document.title}\n    `;\n    }\n};\nTitle = __decorate([\n    connectStore(history.store),\n    customElement('gem-title')\n], Title);\nexport { Title };\nif (document.head && !document.head.querySelector('gem-title')) {\n    document.head.append(new Title(true));\n}\n//# sourceMappingURL=title.js.map","/* eslint-disable @typescript-eslint/camelcase */\n/**\n * 没有提供真正的沙箱，因为共享 DOM，例如:\n *\n * * `Node.ownerDocument` 就能访问到原始 `document` 对象\n * * <script> 能执行任意代码\n */\nimport GemFrame from './index';\n\nconst emptyFunction = new Function();\n\nfunction generateProxy(target: any, name: string, allowRead: object, allowWrite: object) {\n  return new Proxy(target, {\n    get(_, prop) {\n      if (prop in allowRead) {\n        return allowRead[prop];\n      } else {\n        console.warn(`Read forbidden property: \\`${name}.${String(prop)}\\``);\n        return target[prop] ? emptyFunction : undefined;\n      }\n    },\n    set(_, prop, value) {\n      if (allowWrite[prop]) {\n        target[prop] = value;\n      } else {\n        console.warn(`Write forbidden property: \\`${name}.${String(prop)}\\`, ${value}`);\n      }\n      return true;\n    },\n  });\n}\n\n// 避免执行子 app 中的 `render(xx, ele)` 方法\nfunction avoidRender(ele: Element) {\n  Object.assign(ele, {\n    insertBefore: emptyFunction,\n    querySelector: (selector: string) => {\n      const e = ele.querySelector(selector);\n      if (e) avoidRender(e);\n      return e;\n    },\n  });\n  return ele;\n}\n\nexport function getGlobalObject(frameElement: GemFrame, doc = new Document()) {\n  const allowReadDocument = {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Document\n    body: frameElement.tag ? avoidRender(doc.body) : frameElement.shadowRoot,\n    documentElement: doc.documentElement,\n    activeElement: null,\n    get cookie() {\n      return document.cookie;\n    },\n    get hidden() {\n      return document.hidden;\n    },\n    get domain() {\n      return document.domain;\n    },\n    get referrer() {\n      return document.referrer;\n    },\n    location,\n    get getSelection() {\n      return frameElement.shadowRoot.getSelection;\n    },\n    get elementFromPoint() {\n      return frameElement.shadowRoot.elementFromPoint;\n    },\n    get elementsFromPoint() {\n      return frameElement.shadowRoot.elementsFromPoint;\n    },\n    get caretRangeFromPoint() {\n      return frameElement.shadowRoot.caretRangeFromPoint;\n    },\n    get caretPositionFromPoint() {\n      return frameElement.shadowRoot.caretPositionFromPoint;\n    },\n\n    // <gem-title>\n    get title() {\n      return document.title;\n    },\n    head: document.head,\n\n    // <gem-use>\n    querySelector: doc.querySelector.bind(doc),\n    querySelectorAll: doc.querySelectorAll.bind(doc),\n\n    // lit-html\n    // lit-html 创建的 script 解析在 template 中，不会执行\n    createElement(tag: string) {\n      if (tag === 'script') {\n        // 用于 webpack 的动态模块\n        const script = doc.createElement('script');\n        Object.defineProperty(script, 'src', {\n          set(value) {\n            const gemframe = new GemFrame();\n            gemframe.src = value;\n            gemframe._fetchScript();\n            return true;\n          },\n        });\n        return script;\n      }\n      return document.createElement(tag);\n    },\n    createComment: document.createComment.bind(document),\n    createTextNode: document.createTextNode.bind(document),\n    createTreeWalker: document.createTreeWalker.bind(document),\n    createDocumentFragment: document.createDocumentFragment.bind(document),\n    adoptNode: document.adoptNode.bind(document),\n    importNode: document.importNode.bind(document),\n\n    //react\n    createEvent: document.createEvent.bind(document),\n\n    // event\n    addEventListener: <K extends keyof DocumentEventMap>(\n      type: K,\n      callback: any,\n      options: boolean | AddEventListenerOptions,\n    ) => {\n      // 拦截不到 react 事件，导致 react-router link 不能正常跳转\n      if (['visibilitychange'].includes(type)) {\n        frameElement._addProxyEventListener(document, type, callback, options);\n      } else {\n        // mouse event, pointer event, keyboard event...\n        frameElement._addProxyEventListener(frameElement, type, callback, options);\n      }\n    },\n    removeEventListener: (type, callback, options) => {\n      if (['visibilitychange'].includes(type)) {\n        frameElement._removeProxyEventListener(document, type, callback, options);\n      } else {\n        frameElement._removeProxyEventListener(frameElement, type, callback, options);\n      }\n    },\n  };\n\n  const allowWriteDocument = {\n    cookie: true,\n    // <gem-title>\n    title: true,\n  };\n\n  const allowReadWindow = {\n    // webpack\n    get webpackJsonp() {\n      return window['webpackJsonp'];\n    },\n    // common\n    get name() {\n      return window.name;\n    },\n    get top() {\n      return window.top;\n    },\n    console,\n    caches,\n    Headers,\n    Response,\n    Request,\n    XMLHttpRequest,\n    WebSocket,\n    EventSource,\n    URL,\n    URLSearchParams,\n    navigator,\n    devicePixelRatio,\n    DOMMatrix,\n    DOMMatrixReadOnly,\n    DOMPoint,\n    DOMPointReadOnly,\n    DOMQuad,\n    DOMRect,\n    DOMRectReadOnly,\n    get innerHeight() {\n      return frameElement.clientHeight;\n    },\n    get innerWidth() {\n      return frameElement.clientWidth;\n    },\n    isSecureContext,\n    performance,\n    screen,\n    visualViewport: window['visualViewport'],\n    // https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope#Methods\n    atob: atob.bind(window),\n    btoa: btoa.bind(window),\n    fetch: fetch.bind(window),\n    createImageBitmap: createImageBitmap.bind(window),\n    setTimeout: setTimeout.bind(window),\n    clearTimeout: clearTimeout.bind(window),\n    setInterval: setInterval.bind(window),\n    clearInterval: clearInterval.bind(window),\n    queueMicrotask: queueMicrotask.bind(window),\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window#Methods\n    alert: alert.bind(window),\n    confirm: confirm.bind(window),\n    requestAnimationFrame: requestAnimationFrame.bind(window),\n    cancelAnimationFrame: cancelAnimationFrame.bind(window),\n    getComputedStyle: getComputedStyle.bind(window),\n    getSelection: getSelection.bind(window),\n    matchMedia: matchMedia.bind(window),\n    open: open.bind(window),\n    postMessage: (data: any) => {\n      frameElement.dispatchEvent(new MessageEvent('message', { data }));\n    },\n    parent: {\n      postMessage: (data: any) => {\n        window.dispatchEvent(new MessageEvent('message', { data }));\n      },\n    },\n    prompt: prompt.bind(window),\n    // gem\n    Image,\n    DOMParser,\n    HTMLElement,\n    customElements,\n    CustomEvent,\n    Node,\n    location,\n    localStorage,\n    sessionStorage,\n    history,\n    __litHtml: window.__litHtml,\n    addEventListener: <K extends keyof WindowEventMap>(\n      type: K,\n      callback: any,\n      options: boolean | AddEventListenerOptions,\n    ) => {\n      if (['load', 'DOMContentLoaded'].includes(type)) {\n        // 未考虑 `removeEventListener`\n        // 直接执行\n        setTimeout(() => callback(new CustomEvent(type)));\n      } else if (['resize'].includes(type)) {\n        // 未考虑 `removeEventListener`\n        if (window.ResizeObserver) {\n          let called = false; // `observe` 会立刻调用回调\n          const resizeObserver = new ResizeObserver(() => {\n            if (called) {\n              callback(new CustomEvent(type));\n            }\n            called = true;\n          });\n          resizeObserver.observe(frameElement);\n        }\n      } else if (['popstate', 'unload', 'beforeunload'].includes(type)) {\n        frameElement._addProxyEventListener(window, type, callback, options);\n      } else {\n        // mouse event, pointer event, keyboard event...\n        frameElement._addProxyEventListener(frameElement, type, callback, options);\n      }\n    },\n    removeEventListener: (type, callback, options) => {\n      if (['popstate', 'unload', 'beforeunload'].includes(type)) {\n        frameElement._removeProxyEventListener(window, type, callback, options);\n      } else {\n        // mouse event, pointer event, keyboard event...\n        frameElement._removeProxyEventListener(frameElement, type, callback, options);\n      }\n    },\n    // lit-html\n    get litHtmlVersions() {\n      return window.litHtmlVersions;\n    },\n    //react\n    get __react_router_build__() {\n      return window['__react_router_build__'];\n    },\n  };\n\n  const allowWriteWindow = {\n    webpackJsonp: true,\n    name: true,\n    __litHtml: true,\n    litHtmlVersions: true,\n    __react_router_build__: true,\n  };\n\n  const global = generateProxy(window, 'window', allowReadWindow, allowWriteWindow);\n  return Object.assign(allowReadWindow, {\n    document: generateProxy(document, 'document', allowReadDocument, allowWriteDocument),\n    window: global,\n    global: global, // webpack dev 下会读取，chrome 会检测类型导致发生错误，类型检测原因不明，有可能是过时标准的问题\n    globalThis: global,\n    self: global,\n    ...frameElement.context,\n  });\n}\n","import { GemElement } from '@mantou/gem/lib/element';\nimport { attribute, customElement, emitter, property, adoptedStyle } from '@mantou/gem/lib/decorators';\nimport { css, createCSSSheet } from '@mantou/gem/lib/utils';\nimport Realm from 'realms-shim';\n\nimport { getGlobalObject } from './proxy';\n\n// 方便清空内容\nconst frameStyle = createCSSSheet(css`\n  :host {\n    all: initial;\n    display: block;\n    border: none;\n    overflow: auto;\n    position: relative;\n  }\n`);\n\nconst fetchedScript = new Set();\n\n/**\n * @custom-element gem-frame\n * @prop context\n * @attr src\n * @attr tag\n * @fires error\n */\n@customElement('gem-frame')\n@adoptedStyle(frameStyle)\nexport default class GemFrame extends GemElement {\n  // 资源路径，支持 html, json, js\n  @attribute src: string;\n  // 自定义元素 tagName\n  @attribute tag: string;\n  // 执行时发生错误, `event.detail` 获取该错误对象\n  @emitter error: Function;\n  // 共享到子 app 的对象\n  @property context: object = {};\n\n  async _fetchScript() {\n    if (!this.src) return;\n    // 自定义元素不需要重复执行\n    if (this.tag && fetchedScript.has(this.src)) return;\n    // react app 执行前清空内容\n    if (!this.tag) this._cleannContent();\n    let src = this.src.startsWith('//') ? `${location.protocol}${this.src}` : this.src;\n    let doc: Document;\n    const url = new URL(src, location.origin);\n    if (url.pathname.endsWith('.json')) {\n      // webpack manifest\n      // 假设第一个字段就是 output\n      // 相对路径可能有问题\n      const manifest = await (await fetch(`${src}?t=${Date.now()}`)).json();\n      src = new URL(manifest[Object.keys(manifest)[0]], url).toString();\n    } else if (url.pathname.endsWith('.js')) {\n      // 不能自动更新\n      src = this.src;\n    } else {\n      // html\n      const text = await (await fetch(`${src}?t=${Date.now()}`)).text();\n      const parse = new DOMParser();\n      doc = parse.parseFromString(text, 'text/html');\n      const script: HTMLScriptElement = doc.querySelector('script[src]');\n      const { pathname, search } = new URL(script.src);\n      src = new URL(`${pathname}${search}`, url).toString();\n    }\n    if (!src) return; // 静默失败\n    const text = await (await fetch(src)).text();\n    const r = Realm.makeRootRealm({ errorHandler: this._errorEventHandler });\n    try {\n      r.evaluate(text, getGlobalObject(this, doc));\n    } catch (err) {\n      this.error(err);\n    }\n    fetchedScript.add(this.src);\n  }\n\n  _updateElement() {\n    if (this.tag) {\n      this._cleannContent();\n      const app = document.createElement(this.tag) as GemElement;\n      // 错误传播\n      app.addEventListener('error', (err: CustomEvent) => this.error(err.detail));\n      this.shadowRoot.append(app);\n    }\n  }\n\n  _eventListenerList: [EventTarget, string, any, boolean | AddEventListenerOptions][] = [];\n\n  _addProxyEventListener(\n    target: EventTarget,\n    event: string,\n    callback: any,\n    options: boolean | AddEventListenerOptions,\n  ) {\n    target.addEventListener(event, callback, options);\n    this._eventListenerList.push([target, event, callback, options]);\n  }\n\n  _removeProxyEventListener(\n    target: EventTarget,\n    event: string,\n    callback: any,\n    options: boolean | AddEventListenerOptions,\n  ) {\n    target.removeEventListener(event, callback, options);\n    const index = this._eventListenerList.findIndex(([_target, _event, _callback, _options]) => {\n      return (\n        target === _target &&\n        event === _event &&\n        callback === _callback &&\n        (typeof options === 'object' && typeof _options === 'object'\n          ? options.capture === _options.capture &&\n            options.once === _options.once &&\n            options.passive === _options.passive\n          : options === _options)\n      );\n    });\n    if (index !== -1) this._eventListenerList.splice(index, 1);\n  }\n\n  _cleannContent() {\n    this.shadowRoot.innerHTML = '';\n  }\n\n  _cleanEventListener() {\n    // 清除 `<gem-frame>` 以及 `window`, `document` 上的事件监听器\n    this._eventListenerList.forEach(([target, event, callback, options]) => {\n      target.removeEventListener(event, callback, options);\n    });\n    this._eventListenerList = [];\n  }\n\n  _errorEventHandler = ({ error }: ErrorEvent) => {\n    this.error(error);\n  };\n\n  mounted() {\n    this._updateElement();\n    this._fetchScript();\n  }\n\n  unmounted() {\n    this._cleanEventListener();\n  }\n\n  attributeChanged(name: string) {\n    this._cleanEventListener();\n\n    if (name === 'src') {\n      this._fetchScript();\n    }\n    if (name === 'tag') {\n      this._updateElement();\n    }\n  }\n}\n","import { html } from '@mantou/gem';\n\nimport { RouteItem } from '@mantou/gem/elements/route';\nimport '@mantou/gem/elements/title';\nimport 'gem-frame';\n\nexport default [\n  {\n    pattern: '/',\n    redirect: '/a/a',\n  },\n  {\n    title: '页面 A',\n    pattern: '/a/*',\n    path: '/a/a', // 给 <link> 用的\n    content: html`\n      <gem-frame tag=\"app-a-root\" src=\"/app/\"></gem-frame>\n    `,\n  },\n  {\n    title: 'React',\n    pattern: '/r/*',\n    path: '/r/a', // 给 <link> 用的\n    content: html`\n      <gem-frame src=\"/react/\"></gem-frame>\n    `,\n  },\n  {\n    title: '页面 B',\n    pattern: '/b',\n    content: html`\n      这是页面 B\n    `,\n  },\n  {\n    title: '页面 C',\n    pattern: '/c',\n    content: html`\n      这是页面 C\n    `,\n  },\n  {\n    title: '页面 D',\n    pattern: '/d',\n    content: html`\n      这是页面 D\n    `,\n  },\n] as (RouteItem & { path: string })[];\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { GemElement, html, history, basePathStore, attribute, property, connectStore, customElement, state } from '../';\nimport { isMatch, createHistoryParams, createPath } from './route';\n/**\n * @customElement gem-link\n * @attr href\n * @attr doc-title\n * @attr path\n * @attr query\n * @attr hash\n * @attr pattern\n */\nlet Link = class Link extends GemElement {\n    constructor() {\n        super();\n        this.clickHandle = (e) => {\n            const href = this.getHref();\n            // 外部链接使用 `window.open`\n            if (!href.startsWith('/')) {\n                window.open(href);\n                return;\n            }\n            const { path, query, hash } = history.getParams();\n            if (path + query + hash === href) {\n                return;\n            }\n            e.stopPropagation();\n            if (this.route) {\n                history.pushIgnoreCloseHandle(Object.assign(Object.assign({}, createHistoryParams(this.route, this.options)), { title: this.route.title || this.docTitle }));\n            }\n            else if (this.href) {\n                const { pathname, search, hash } = new URL(href, location.origin);\n                history.pushIgnoreCloseHandle({ path: pathname, query: search, hash, title: this.docTitle });\n            }\n            else {\n                history.pushIgnoreCloseHandle({ path: this.path, query: this.query, hash: this.hash, title: this.docTitle });\n            }\n        };\n        this.preventDefault = (e) => {\n            e.preventDefault();\n        };\n        this.onclick = this.clickHandle;\n    }\n    // 不包含 basePath\n    // 不支持相对路径\n    getHref() {\n        if (this.route) {\n            const queryProp = (this.options && this.options.query) || '';\n            const hashProp = (this.options && this.options.hash) || '';\n            return createPath(this.route, this.options) + queryProp + hashProp;\n        }\n        else {\n            const url = this.href || this.path + this.query + this.hash;\n            const { path, query } = history.getParams();\n            if (url.startsWith('#')) {\n                return `${path}${query}${url}`;\n            }\n            else if (url.startsWith('?')) {\n                return `${path}${url}`;\n            }\n            else {\n                return url;\n            }\n        }\n    }\n    render(href = this.getHref()) {\n        return html `\n      <style>\n        :host {\n          /* link default style */\n          cursor: pointer;\n          color: blue;\n          text-decoration: underline;\n        }\n        a {\n          all: unset;\n          display: contents;\n        }\n      </style>\n      <a @click=${this.preventDefault} href=${new URL(history.basePath + href, location.origin).toString()}>\n        <slot></slot>\n      </a>\n    `;\n    }\n};\n__decorate([\n    attribute\n], Link.prototype, \"href\", void 0);\n__decorate([\n    attribute\n], Link.prototype, \"path\", void 0);\n__decorate([\n    attribute\n], Link.prototype, \"query\", void 0);\n__decorate([\n    attribute\n], Link.prototype, \"hash\", void 0);\n__decorate([\n    attribute\n], Link.prototype, \"docTitle\", void 0);\n__decorate([\n    property\n], Link.prototype, \"route\", void 0);\n__decorate([\n    property\n], Link.prototype, \"options\", void 0);\nLink = __decorate([\n    customElement('gem-link'),\n    connectStore(basePathStore)\n], Link);\nexport { Link };\n/**\n * @customElement gem-active-link\n * @attr pattern\n * @state active\n */\nlet ActiveLink = class ActiveLink extends Link {\n    render() {\n        const { path, query, hash } = history.getParams();\n        const isMatchPattern = this.pattern && isMatch(this.pattern, path);\n        const href = this.getHref();\n        if (isMatchPattern || path + query + hash === href) {\n            this.active = true;\n            this.classList.add('active'); // internals 支持 states 再删除\n        }\n        else {\n            this.active = false;\n            this.classList.remove('active');\n        }\n        return super.render(href);\n    }\n};\n__decorate([\n    attribute\n], ActiveLink.prototype, \"pattern\", void 0);\n__decorate([\n    state\n], ActiveLink.prototype, \"active\", void 0);\nActiveLink = __decorate([\n    customElement('gem-active-link'),\n    connectStore(history.store)\n], ActiveLink);\nexport { ActiveLink };\n//# sourceMappingURL=link.js.map","import { GemElement, html, ifDefined } from '@mantou/gem';\nimport routes from './routes';\n\nimport '@mantou/gem/elements/link';\n\nconst menus = routes.filter(e => !!e.content);\n\nclass Sidebar extends GemElement {\n  render() {\n    return html`\n      <style>\n        :host {\n          background: rgba(0, 0, 0, 0.9);\n          color: white;\n        }\n        ol {\n          margin: 1em auto;\n          padding: 0;\n        }\n        li gem-active-link {\n          color: white;\n          text-decoration: none;\n          display: block;\n          margin: 0;\n          padding: 0 1em;\n          line-height: 2;\n        }\n        li gem-active-link:hover {\n          background: rgba(255, 255, 255, 0.1);\n        }\n        li gem-active-link.active {\n          background: rgba(255, 255, 255, 0.2);\n        }\n      </style>\n      <ol>\n        ${menus.map(\n          route =>\n            html`\n              <li>\n                <gem-active-link\n                  path=${route.path || route.pattern}\n                  pattern=${ifDefined(route.path ? route.pattern : undefined)}\n                >\n                  ${route.title}\n                </gem-active-link>\n              </li>\n            `,\n        )}\n      </ol>\n    `;\n  }\n}\ncustomElements.define('app-sidebar', Sidebar);\n","import { GemElement, html, render } from '@mantou/gem';\n\nimport '@mantou/gem/elements/route';\n\nimport './app-header';\nimport './app-sidebar';\n\nimport routes from './routes';\n\nclass App extends GemElement {\n  render() {\n    return html`\n      <style>\n        :host {\n          display: grid;\n          grid-template-columns: 220px auto;\n          grid-template-rows: 64px auto;\n          width: 100vw;\n          height: 100vh;\n        }\n      </style>\n      <app-header></app-header>\n      <app-sidebar></app-sidebar>\n      <gem-route .routes=${routes}></gem-route>\n    `;\n  }\n}\ncustomElements.define('app-root', App);\n\nrender(\n  html`\n    <style>\n      body {\n        margin: 0;\n      }\n    </style>\n    <app-root></app-root>\n  `,\n  document.body,\n);\n"],"sourceRoot":""}